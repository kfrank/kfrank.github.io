{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/blog-list-template.js"],"names":["Layout","render","children","this","props","className","styles","wrapper","React","Component","BlogList","pageContext","currentPage","isFirst","isLast","numPages","prevPageLink","toString","nextPageLink","posts","data","allMarkdownRemark","edges","map","node","title","frontmatter","fields","slug","key","to","rel","blogListQuery"],"mappings":"sKAIMA,E,gLACJC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAlBF,SACR,OACE,yBAAKG,UAAWC,IAAOC,SAErB,8BAAOL,K,GANMM,IAAMC,WAaZT,O,0MCbMU,E,gLACnBT,OAAA,WAAU,IAAD,EAC2BE,KAAKC,MAAMO,YAArCC,EADD,EACCA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IAHR,EACcG,SAIfC,EAAe,aADJJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,YAG3DC,EAAe,aADHN,EAAc,GAAGK,WAE7BE,EAAQhB,KAAKC,MAAMgB,KAAKC,kBAAkBC,MAChD,OACE,kBAAC,IAAD,KACGH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OAAO,yBAAKC,IAAKL,EAAKG,OAAOC,MAAOH,OAGpCZ,GACA,kBAAC,OAAD,CAAMiB,GAAId,EAAce,IAAI,QAA5B,oBAIAjB,GACA,kBAAC,OAAD,CAAMgB,GAAIZ,EAAca,IAAI,QAA5B,iB,GAvB4BvB,IAAMC,WAgC/BuB,EAAa","file":"component---src-templates-blog-list-template-js-0d5ec6b65419f4296373.js","sourcesContent":["import React from \"react\"\nimport styles from \"./layout.module.scss\"\n// import Nav from \"./Nav\"\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n    return (\n      <div className={styles.wrapper}>\n        {/* <Nav /> */}\n        <main>{children}</main>\n        {/* <footer>© {new Date().getFullYear()}</footer> */}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n    const prevPageLink = \"/writing/\" + prevPage\n    const nextPage = (currentPage + 1).toString()\n    const nextPageLink = \"/writing/\" + nextPage\n    const posts = this.props.data.allMarkdownRemark.edges\n    return (\n      <Layout>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return <div key={node.fields.slug}>{title}</div>\n        })}\n\n        {!isFirst && (\n          <Link to={prevPageLink} rel=\"prev\">\n            ← Previous Page\n          </Link>\n        )}\n        {!isLast && (\n          <Link to={nextPageLink} rel=\"next\">\n            Next Page →\n          </Link>\n        )}\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { posttype: { eq: \"blog\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}