<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Klare</title>
  <id>/</id>
  <link href="/" />
  <link href="//atom.xml" rel="self" />
  <updated>2016-08-01T10:58:36-07:00</updated>
  <rights>Copyright 2014, Klare Frank</rights>
  <author>
    <name>Klare Frank</name>
  </author>
  
    <entry>
      <title>Techdegree Landing Page</title>
      <link href="//techdegrees.html" />
      <summary type="html">&lt;div class=&quot;content--post&quot;&gt;

&lt;p&gt;After designing and building the ui experience for Techdegree projects, local exercises, and exams, I switched over to the marketing team to help create the front-facing experience.&lt;/p&gt;

&lt;p&gt;For the Techdegree program, we wanted to mature the Treehouse brand and take the visual style from something that was very round and heavy on illustrations to incorporating more diverse photography depicting real people and using more professional-leaning colors.&lt;/p&gt;

&lt;p&gt;View the live page: &lt;a href=&quot;http://teamtreehouse.com/techdegree&quot;&gt;Techdegree home&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Full Version&lt;/h2&gt;

&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/techdegree-marketing/techdegree-marketing-full@2x.jpg&quot; alt=&quot;Full comp&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;User Flows&lt;/h3&gt;
&lt;p&gt;Since current students could also sign up for Techdegree, we needed a clear flow that included both them and potential students being directed through the page. Current students could signup using two different routes, through the techdegree page and also through their account settings, but both would end up at the same place. I created this userflow (using templates and icons I also designed) to make that clear.&lt;/p&gt;
&lt;img src=&quot;/assets/img/techdegree-marketing/techdegree-marketing-userflow.png&quot; alt=&quot;Full comp&quot;&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;Wireframes&lt;/h2&gt;
&lt;p&gt;This page went through a couple rounds of iterations where we refined copy and removed a few sections to speed up launch time. I decided to included comments for each section while creating wireframes to set the tone of the page and make sure each section had a specific purpose. This included adding two quesitons to each section: &#39;Who is this for?&#39; and &#39;What value does this add?&#39;. Each question would help inform how to design for the audience and which strengths to play.&lt;/p&gt;

&lt;img src=&quot;/assets/img/techdegree-marketing/techdegree-marketing-sketch.jpg&quot; alt=&quot;Full comp&quot;&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/techdegree-marketing/techdegree-marketing-wireframes-comments.jpg&quot; alt=&quot;Full comp&quot;&gt;&lt;/p&gt;
</summary>
      <id>//techdegrees.html</id>
      <updated>2016-05-20T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Local Exercises</title>
      <link href="//treehouse-local-exercises.html" />
      <summary type="html">&lt;div class=&quot;content--post&quot;&gt;

    &lt;h2&gt;Context&lt;/h2&gt;
    &lt;p&gt;This project started off brainstorming the most effective and easiest ways a student would be able to sync their work with Treehouse. Through a Techdegree program, we would give students code challenges they would need to complete using code editors or IDEs on their computer. This is especially important for iOS and Java tracks, as the level of challenges was more than simply completing a code string in browser. We also wanted to give students the ability to use code checking features available in their IDEs and code editors. This would help them get more comfortable with writing code like a professional.&lt;/p&gt;
    &lt;p&gt;We ultimately decided to go with an experience that we could develop quickly and iterate on later. This decision was made so we could easily test the effectiveness of having students complete exercises on their computers and understand how that fit within our learning experience. To make this easy, we decided to let users upload their code and we would run several tests on it to check if it passed or failed, then give students the proper feedback in either scenerio.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h2&gt;Userflows&lt;/h2&gt;
    &lt;p&gt;I started out by designing a userflow so my entire time was on the same page in regards to how our students would go about completing the projects.&lt;/p&gt;

        &lt;img src=&quot;/assets/img/local-exercises/local-exercises_userflow@2x.png&quot; alt=&quot;Userflow&quot;&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h2&gt;Wireframes&lt;/h2&gt;
    &lt;p&gt;I started off by creating wireframe prototypes in code using Treehouse&#39;s existing pattern library. Following the layout of our previous code challenges, I created screens that followed the userflow I had laid out and my team agreed upon. This made it easier for the developers I was working with to start in on integrating the flow and building out the experience while I was refining visual designs.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-wireframes-01@2x.png&quot; alt=&quot;Wireframes&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-wireframes-02@2x.png&quot; alt=&quot;Wireframes&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-wireframes-03@2x.png&quot; alt=&quot;Wireframes&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-wireframes-04@2x.png&quot; alt=&quot;Wireframes&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h2&gt;Visual Design&lt;/h2&gt;
    &lt;h3&gt;Refining the UI&lt;/h3&gt;
    &lt;p&gt;After my team further discussed the wireframe and flow, I refined the layout and visual designs of the screens, moving the primary actions to the top in a centralized area and adding feedback and tips to create context for students around the experience.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-01@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-03-loading@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-03c-loading-ended@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-02-upload@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-03b-loading-results@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/local-exercises/local-exercises-comps-04-complete@2x.png&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;Creating the Pinata&lt;/h3&gt;
    &lt;p&gt;For the first iteration of local exerices, we realized we would have a period of time that the uploaded code would need to be run through several tests. Since this would take some time, and we weren&#39;t quite sure how long, I knew that students would need some sort of feedback to indicate tests were still running smoothly.&lt;/p&gt;
    &lt;p&gt;Instead of creating a loading animation or progress bar, I decided to make the experience more interactive and give sudents something fun to do while they waited, hence the pinata. Students could interact with the pinata and it would serve as a little &#39;easter egg&#39; to add delight to an otherwise mundane, non-user focused part of the experience.&lt;/p&gt;
    &lt;img src=&quot;/assets/img/local-exercises/pinata.jpg&quot; alt=&quot;Pinata&quot;&gt;
    &lt;p&gt;I illustrated the pinata in Adobe Illustrator before exporting it to svg. From there, I experimented in &lt;a href=&quot;http://codepen.io/klare/pen/gPQLzy&quot;&gt;Codepen with Greensock&#39;s tweening library&lt;/a&gt; to animate it in a back and forth swinging motion . From there I added click events and animated the eyes rolling and the pinata swinging even further up and away based on how far from the center a person clicked. &lt;a href=&quot;http://codepen.io/klare/pen/eZEPaq&quot;&gt;See Codepen experiement&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

</summary>
      <id>//treehouse-local-exercises.html</id>
      <updated>2016-03-30T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Being Creative When You’re Just Not Feeling It</title>
      <link href="//being-creative-when-youre-not-feeling-it.html" />
      <summary type="html">&lt;p&gt;I have a confession: I used the tips outlined for this post to write it. I wasn’t feeling inspired or creative enough to just sit down and start writing. Sometimes that happens, but as a designer with deadlines and teammates relying on me to execute great work, there’s no possibility of pushing off a project because I’m not feeling 110% up to it. When I’m not feeling that creative, I just have to suck it up, push through, and do the work anyway.&lt;/p&gt;

&lt;p&gt;We’ve largely been tricked into this notion that a low point in creativity is a block, like an impassible boulder in a trail, and that great work comes from moments of divine inspiration. When we don’t have that inspiration we sit around, lost and frustrated, waiting for it to appear in a lightning-like moment that’ll bring about clarity. In reality, these aha moments strike about as often as lightning and most of us don’t have the luxury of waiting.&lt;/p&gt;

&lt;p&gt;I like to think of inspiration as a short cut in the process of creating, like an easier switchback up the mountain. Without it, the journey is straight up, fighting against the tough climb in elevation. Through perseverance, both paths still lead to a magnificent view at the top. There is no secret to creativity: it’s just about not giving up. Instead of sitting around waiting for inspiration to strike, do something about it and fight back.&lt;/p&gt;

&lt;p&gt;Here are three tactics I use to reignite and keep my creativity flowing, so when I’m not feeling it I can still execute great work.&lt;/p&gt;

&lt;h2&gt;1. Change your perspective&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;Change will lead to insight far more often than insight will lead to change. — Milton Erikson&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Rethink what creativity is&lt;/h3&gt;

&lt;p&gt;When I show my work to friends, I am told all the time, ‘I couldn’t do that, I’m just not creative enough.’ This really irks me. The lie commonly told about creativity is that it’s an innate ability: some people have it and some don’t.&lt;/p&gt;

&lt;p&gt;In the article &lt;a href=&quot;http://99u.com/articles/35045/5-creativity-myths-you-probably-believe&quot;&gt;5 Creativity Myths You Probably Believe&lt;/a&gt;, Christian Jarrett writes:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Not only is it a simplification to label creativity as the exclusive domain of the right-brain, it’s also mistaken to claim that some people are right-brained and some people left-brained. In 2013, researchers scanned the brains of over a thousand people and &lt;a href=&quot;http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0071275&quot;&gt;found no evidence for this way of categorizing people&lt;/a&gt;. Calling someone right-brained” or “left-brained” is as useful as saying that someone is Virgo or Pisces.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Creativity isn’t the preserve of one side of the brain, and it isn’t a talent confined to people with a special kind of brain. Real neuroscience says: if you’re human and you’ve got a brain, you’re capable of being creative.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Science proves it: you can’t blame a lack of creativity on something you do or don’t have. I always respond to those who claim they aren’t creative by saying that perceived creativity is more a matter of hard work and practice. If you work at being creative everyday, over time you’ll realize that your creativity levels aren’t constant. Some days you might feel completely inspired, and others it’ll be hard to work, but it’s ok as long as you continue practicing creativity and feel more comfortable beginning projects, large or small.&lt;/p&gt;

&lt;h3&gt;Literally change your perspective&lt;/h3&gt;

&lt;p&gt;When I’m feeling stuck, I pack up my computer and set up at a different location. Usually it’s going to a coffeeshop or the library and working for a couple hours, but if I’m feeling especially uninspired, I’ll go to a different city for a week. If you aren’t remote, move from your desk and try a new spot in the office. Sometimes even a simple move can do a lot for making you feel less stuck.&lt;/p&gt;

&lt;p&gt;I use this method of changing locations a lot. I’ve learned that getting out of what I consider comfortable is a great way to explore new ideas.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The reason such travels are mentally useful involves a quirk of cognition, in which problems that feel “close” — and the closeness can be physical, temporal or even emotional — get contemplated in a more concrete manner. As a result, when we think about things that are nearby, our thoughts are constricted, bound by a more limited set of associations. While this habit can be helpful — it allows us to focus on the facts at hand — it also inhibits our imagination.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;— Jonah Lehrer, &lt;a href=&quot;http://www.theguardian.com/travel/2010/mar/14/why-travel-makes-you-smarter?page=all&quot;&gt;Why travel makes you smarter&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Imagination is exactly what I sometimes need to start an illustration for part of a page or think about how a new layout could enhance an experience. When I’m forced outside of my comfort zone, my brain is pushed to respond in new ways, and those new ideas are what’s needed when I’m starting a project.&lt;/p&gt;

&lt;h2&gt;2. Make it a habit&lt;/h2&gt;

&lt;p&gt;I started a new experiment a few weeks ago to see if I could gradually increase how creative I felt. For thirty minutes every day, I do something creative that doesn’t involve staring at a screen. I’ve mostly been hand lettering, doing watercolor landscapes, and woodworking. I have a tendency to overthink problems before I start them, which can be useful for some UX problems, but other times it can backfire. Honestly some days I miss doing my thirty minutes, but overall it’s increased my drive to just start creating.&lt;/p&gt;

&lt;p&gt;Other designers have taken thirty day challenges when they’re in creative blocks with wildly successful results. Jessica Hische started doing a daily illustrative drop (or initial) cap in September 2009 to keep her motivated and inspired when work was slow which helped launch her lettering career. If you’re not feeling inspired to start, How Design has a 30-day challenge with an idea every day.&lt;/p&gt;

&lt;p&gt;By allowing myself to just create for the sake of making, I’m more open to let ideas through that I’d otherwise ignore. By making it a daily habit, I’m assured that I’m capable of executing creative work, and have ideas to draw from when I get stuck. The more I feel I’m creating regularly, filling in those gaps when work is slow and boosting creativity with short projects without expectations, the more confident I feel to start work projects.&lt;/p&gt;

&lt;h2&gt;3. Get out from behind the screen&lt;/h2&gt;

&lt;p&gt;Halfway through writing this, I got stuck staring at an unchanging screen and thought it would be a perfect time to recharge with a short walk to the library. After all, it was sunny outside and having just gotten through an entire Seattle winter, it’s been a rare sight. Removing myself from the problem gives my brain enough time to think about other things and be inspired by different surrounds.&lt;/p&gt;

&lt;p&gt;In fact, in a March 2016 study called &lt;a href=&quot;http://www.tandfonline.com/doi/abs/10.1080/13546783.2016.1141798?journalCode=ptar20&amp;amp;&quot;&gt;Insightful Solutions Are Correct More Often Than Analytical Solutions&lt;/a&gt;, a research team tested participants in their strategies in finding solutions. They found that participants who gave their ideas time to develop by were more likely arrive at the correct answer than participants who forced through a problem with analytical thought, which sometimes lead to sloppy and rushed mistakes.&lt;/p&gt;

&lt;p&gt;Even if it may seem counterintuitive to put aside work and seek out inspiration in other forms, it can often lead to better results. So go take that walk. Go for a run. Give your brain a short break.&lt;/p&gt;

&lt;h2&gt;If you’re still uninspired, work through it&lt;/h2&gt;

&lt;p&gt;When I’m beginning a page design, I like to start by outlining all the components of the page I think I need. It helps to wrap my mind around all the pieces that’ll make up the whole. Sometimes the act of starting, whether that’s the whole layout or an illustration in the page, is enough of a push to get me inspired to complete a project.&lt;/p&gt;

&lt;p&gt;It also helps to go low fidelity and start sketching basic ideas (even if you don’t think you can sketch well). There’s a good reason why logo designers fill up pages full of ideas before arriving at a solution. Sketching is a low pressure and a faster way to get ideas out. Even if you feel silly sketching an idea, remember it’s only living in a sketchbook you’ll see.&lt;/p&gt;

&lt;p&gt;Another quick tactic is scrolling through inspiration. As much as Dribbble is criticized for delivering pixel perfect work, it still serves as a great way to get inspired. One of my go-to ways is to search by color, which helps me understand quickly which colors look great together instead of going through a trial and error in Sketch or Illustrator.&lt;/p&gt;

&lt;p&gt;Finally, get feedback. If you’re absolutely stuck, you probably haven’t asked for help yet. Colleagues can look at work with fresh eyes and introduce new ideas that you wouldn’t have thought of, which can be exactly what you need when you’re stuck in your own head.&lt;/p&gt;

&lt;p&gt;I want to end with this quote from Jonathan Fields that reiterates how starting a project is never completely easy, but that’s ok:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Nothing truly innovative, nothing that has advanced art, business, design, or humanity, was ever created in the face of genuine certainty or perfect information. Because the only way to be certain before you begin is if the thing you seek to do has already been done.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;— Jonathan Fields, &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/1591845661/braipick-20&quot;&gt;Uncertainty: Turning Fear and Doubt into Fuel for Brilliance&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This post was originally published on &lt;a href=&quot;https://medium.com/treehouse-engineering/being-creative-when-you-re-just-not-feeling-it-9dd55034207d#.sbiaoqgkz&quot;&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</summary>
      <id>//being-creative-when-youre-not-feeling-it.html</id>
      <updated>2016-03-23T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Treehouse Career Program</title>
      <link href="//career-program.html" />
      <summary type="html">&lt;div class=&quot;content--post&quot;&gt;

    &lt;h2&gt;Career Projects&lt;/h2&gt;
    &lt;p&gt;The Treehouse Career Program was an existing program when I joined the team, but it still lacked helping students develop fundamental job skills to help them get hired.&lt;/p&gt;
    &lt;p&gt;Through auditing and talking with students, I identified that Treehouse students still lacked real-world skills and did not have a portfolio of work to show they were capable of the skills they knew. This problem could be solved through directing students to build projects, at first on their own, to gain problem solving skills, and then with teams, to gain skills in working in a team dynamic.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h2&gt;My Process&lt;/h2&gt;
    &lt;p&gt;I started the process by creating user flows for how a student would typically navigate through the projects portion of the career program. After that, wireframes are usually created to win over key decision makers and help them understand the experience without getting influenced by the design.&lt;/p&gt;
    &lt;p&gt;However, the key decision makers were already very familiar with the look and feel of our app. Since we already had a well-defined set of styles to use throughout the Treehouse app, I choose to prototype most all of my designs in code for quicker iterations. This helped me work closer with the developers on my team and get ideas tested sooner rather than relying on assumptions.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;Iteration one&lt;/h3&gt;
    &lt;p&gt;I started out by designing a userflow so my entire time was on the same page in regards to how our students would go about completing the projects.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image2.jpg&quot; alt=&quot;Web&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;Design &amp;amp; Development&lt;/h3&gt;
    &lt;p&gt;From there, I began mockup up the screens in code using our existing stylesheets. Using our own code made it really easy for me to get a sense for our system as a new team member and show in real-time what projects might look like to stakeholders.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image3.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image6.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image7.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image4.png&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image5.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image8.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;Iteration two&lt;/h3&gt;
    &lt;p&gt;After we agreed on the flow and the basic designs, I started refining the visual designs and certain parts of the user experience. I ended up creating 3 custom icons that would start grayed out and get filled in with color as a student progressed futher by manipulating svg elements.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image9.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image10.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image12.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image13.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;

    &lt;h2&gt;Project Reviews&lt;/h2&gt;
    &lt;p&gt;After we had students actively creating projects, we decided another important skill for them to learn was how to properly critique their peers work as well as receive feedback and improve upon their work. For this, we decided to implement a review system where students would receive feedback from both their peers and professionals.&lt;/p&gt;

&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;User experience&lt;/h3&gt;
    &lt;p&gt;Reviews meant allowing a somewhat complicated process, so I started out with a userflow detailing all the steps a student would take to complete a peer review while including the content I thought was necessary to each page or state.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image14.jpg&quot; alt=&quot;Usrflows for reviews&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;
    &lt;h3&gt;Design &amp;amp; Development&lt;/h3&gt;
    &lt;p&gt;As before, I did most of my work in code, occassionally using sketch to create new design patterns quicker and see how those would look before implementing. This approached was much faster and allowed for quick iter&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image15.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image16.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image17.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/career-program/image18.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image19.jpg&quot; alt=&quot;Visual designs&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/career-program/image20.jpg&quot; alt=&quot;Visual designs&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;
    &lt;h2&gt;Key takeaways&lt;/h2&gt;
    &lt;p&gt;As I had access to two slack rooms where students were actively collaboration on projects, I was able to quickly understand their goals and how they worked to create systems that would benefit them. These projects helped inform most of the work that was done over the span of a month to create Treehouse Techdegrees, as further iterations of both projects and reviews were added to the new Techdegree program.&lt;/p&gt;
&lt;/div&gt;

</summary>
      <id>//career-program.html</id>
      <updated>2015-08-01T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>How to Work Remotely Without Losing Your Mind</title>
      <link href="//how-to-work-remotely.html" />
      <summary type="html">&lt;p&gt;It’s been a little over a year since I started working for Treehouse, which meant giving up the office lifestyle. My previous experience working remotely was relegated to a few snow days stuck in southern Delaware and days before holidays.&lt;/p&gt;

&lt;h3&gt;1. Have a separate work and home computer&lt;/h3&gt;

&lt;p&gt;It&#39;s sort of a nod to my days working in government, but I firmly believe that work should be kept separate from anything else you do on a computer. I might close one laptop at the end of the work day and immediately open another, but the perception that I&#39;m leaving work for the day helps. I don&#39;t have any work related development environments set up on my ‘home’ computer (my macbook air), so the temptation to just do one more thing isn&#39;t there. There are some exceptions, like traveling. Lugging around both my macbook pro and my air seemed ridiculous when I moved from DC to Seattle, stopping on vacation for the weekend in Vegas. I usually only take my pro with me when traveling because light travel superceeds other priorities for me.&lt;/p&gt;

&lt;h3&gt;2. Have a dedicated work area&lt;/h3&gt;

&lt;p&gt;But don&#39;t feel like you have to work from there all the time.&lt;/p&gt;

&lt;p&gt;Since I started at Treehouse, I&#39;ve had a dedicated desk at WeWork that houses my 27&quot; monitor and a much more traditional setup. For a while, I had trouble working on anything BUT that monitor, so it helped to set it up someplace that was out of my apartment where I knew would be quiet and I could get things done. Since I&#39;ve done a ton of traveling this year, I&#39;ve gotten more used to multi-tasking on my laptop, but it&#39;s still nice to know I have a dedicated workstation where I can absolutely get my work done.&lt;/p&gt;

&lt;p&gt;However, I get a lot of benefit from switching up my working locations. I find that I&#39;m much more inspired when creating new design work if I go to someplace I don&#39;t usually work from. Taking advantage of the mobility that comes with working remotely has been great, so I don&#39;t try to force myself to go into an office everyday (just most days).&lt;/p&gt;

&lt;h3&gt;3. Get out of your house/apartment every day&lt;/h3&gt;

&lt;p&gt;This was crucial when I lived in a 400 sq foot studio in DC. Since in person interaction was no longer a necessary part of my day to day, it was really easy to stay in for more than a day at a time. I might have some reserved tendancies, but for the most part, I&#39;m at my happiest when I get to talk to someone at least once every day.&lt;/p&gt;

&lt;p&gt;Going outside every day is also crucial in the Winter, to get some more sunlight and vitamin D. I only had one set of windows in my studio that looked out onto another (taller) apartment building, so the amount of light coming in was pretty small. Now that I&#39;m in Seattle, I get less amount of light in the Winter overall, so I&#39;m trying to be proactive about taking in that sunlight when I can (even if it&#39;s behind clouds most of the time).&lt;/p&gt;

&lt;p&gt;And if it&#39;s raining, you don&#39;t have to go outside, but just get out and switch locations for a little while.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There are some other things that might be good practices, such as not lounging in your pjs all day and waking up early, but overall, I&#39;ve found these things to be more every day things than work day things (with some exceptions, of course). I&#39;d also love to have more designers to interact with on a daily basis in-person, but this is more of a nice to have and not a must have.&lt;/p&gt;

&lt;p&gt;Overall, my criteria for keeping sane involves providing myself with enough tools to get my work done efficiently, and keeping myself happy by providing enough in-person interaction that I don&#39;t get from a job daily.&lt;/p&gt;
</summary>
      <id>//how-to-work-remotely.html</id>
      <updated>2015-07-30T08:07:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>The Top 10 Terminal Commands Every New Designer Should Know</title>
      <link href="//terminal-commands.html" />
      <summary type="html">&lt;p&gt;You’ve probably experienced a time you’ve had a developer just sigh and take your computer from you instead of watching you entering in code to a scary looking terminal window. Wouldn’t you rather know a little bit of what they’re up to? Wouldn’t you rather figure out the basic commands of knowing how to use git (which you’ll inevitably have to use at some point)?&lt;/p&gt;

&lt;p&gt;These are the &lt;em&gt;very&lt;/em&gt; basics, but they’ll certainly help with getting you familiar with using terminal and not feeling as scared about deleting everything on your computer.&lt;/p&gt;

&lt;p&gt;First off, you can start using the command line by opening up the Terminal app. The easiest way to do this is to search Spotlight (shortcut: cmd + space) for Terminal.&lt;/p&gt;

&lt;h2&gt;Some basic file management/navigating around files stuff&lt;/h2&gt;

&lt;h4&gt;1. cd&lt;/h4&gt;

&lt;p&gt;Stands for change directory (or folder). You can use this command to navigate into a folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd work/my-project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similarly, you can navigate up, or out of a folder by adding ../ to the beginning:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ../
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;2. ls&lt;/h4&gt;

&lt;p&gt;Stands for list. Lists out the contents of a folder or directory. If I want to see the contents of my Dev folder, I&#39;d type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls Dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;...and then press enter. If your folder were named Development instead, you&#39;d use the next command to save you a little time.&lt;/p&gt;

&lt;h4&gt;3. Tab&lt;/h4&gt;

&lt;p&gt;Completes arguments. If you’re drilling down into a directory, use tab to finish the folder name so you don’t have to memorize it (or worry about spelling it wrong).&lt;/p&gt;

&lt;h4&gt;4. Up and Down Arrow Keys&lt;/h4&gt;

&lt;p&gt;This will let you navigate through previous commands you’ve already entered. I’ve found it’s especially helpful when using git add and push or when you need to remember that command that dev told you to use and you haven’t cleared your window.&lt;/p&gt;

&lt;h4&gt;5. mkdir&lt;/h4&gt;

&lt;p&gt;Stands for make directory. Enter in:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir new-project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create a new folder within the directory you’re in.&lt;/p&gt;

&lt;h4&gt;6. rm&lt;/h4&gt;

&lt;p&gt;Removes. You can use this to, say, remove the directory you just created. (Hint: use tab to complete the directory name.) This command also removes files, but be careful because they do not go to the trash can. Instead, they’re deleted immediately.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm new-project/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;7. mv&lt;/h4&gt;

&lt;p&gt;Created a stylesheet, but it’s in the wrong folder? Use the mv command to move the file to the correct folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv style.css /stylesheets
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;8. clear&lt;/h4&gt;

&lt;p&gt;Clears the current window. Have your terminal window cluttered up with stuff and just want to not be distracted? Enter the clear command to start fresh.&lt;/p&gt;

&lt;h2&gt;Things to help you with development&lt;/h2&gt;

&lt;h4&gt;9. What to do when you a git command and it opens this weird view you can’t get out of&lt;/h4&gt;

&lt;p&gt;If you’ve ever tried to do a git commit and forgot to add a message, it’ll switch views to something that you might have trouble getting out of. This is git opening up vim for you to edit something. All you need to do to exit is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means write (or save) and quite. (Yes you need the colon.) Press enter and it should go back to the view that’s more familiar. If that doesn’t work, try adding an exclamation point to the end.&lt;/p&gt;

&lt;p&gt;Extra points if you actually type a commit message before quitting!&lt;/p&gt;

&lt;h4&gt;10. Start a webserver for a directory&lt;/h4&gt;

&lt;p&gt;This’ll let you view websites you’re building or testing locally. First, cd into the directory or folder you want and then enter this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you’re having trouble with the port number already being in use, add a different number onto the end of the statement. Ex:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python -m SimpleHTTPServer 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;More points&lt;/h4&gt;

&lt;p&gt;Intimidated when people say you should learn something like Vim, but don’t know where to start? You can enter vimtutor as a command and start learning immediately.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vimtutor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s right. Terminal comes with a built in way to learn how to use it’s code editor, so no excuses.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Interested in learning more about how to use the command line? Check out &lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line&quot;&gt;The Art of Command Line&lt;/a&gt;.&lt;/p&gt;
</summary>
      <id>//terminal-commands.html</id>
      <updated>2015-06-18T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Building a music player with pure javascript</title>
      <link href="//building-a-music-player.html" />
      <summary type="html">&lt;p&gt;I will preface this by saying I’m no expert in building javascript web apps from scratch. Most of the work I do using Javascript involves page interactions, working with apis, and prototyping. When my friend Courtney approached me with the idea to do a parody of our friends weekly playlist, This Week’s Playlist, I figured at the very least it would be a great way to exercise some js skills while putting my love of all types of music out there. This Week’s Playlist is a curated weekly playlist of (mostly) new music. Part of our goal for our parody, Next Week’s Playlist (launching on April Fool’s Day, of course), was to also focus on mostly new music, predicting what should be on next week’s This Week’s Playlist.&lt;/p&gt;

&lt;p&gt;I decided early on to test myself by only using pure javascript instead of relying on jquery. The first time I decided to not use jquery was on my coding assignment for my job application to Treehouse, where the functionality I wanted to accomplish was so small that adding an extra second of load time just to make five lines of code work seemed superfluous. While I knew there would be significantly more lines of code needed for Next Week’s Playlist, it seemed like a good opportunity to test out building in pure javascript.&lt;/p&gt;

&lt;h2&gt;Planning out the functionality&lt;/h2&gt;

&lt;p&gt;I started by compiling a list of things we wanted the site to do, starting with the bare minimum needed for it to work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When a user clicks on a song, play the song&lt;/li&gt;
&lt;li&gt;If a user clicks on a song that is playing, pause the song&lt;/li&gt;
&lt;li&gt;When a song ends, play the next song&lt;/li&gt;
&lt;li&gt;When a user presses the spacebar for the first time, play the first song&lt;/li&gt;
&lt;li&gt;When a user presses the spacebar and a song is playing, pause the song&lt;/li&gt;
&lt;li&gt;When a user presses the spacebar and a song is paused, play the song&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We also wanted to add a feature to allow for links to external music services (if the song was available) and decided on a maximum of three: soundcloud, spotify, and rdio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When a user clicks on a links button, toggle the links to external music services&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Starting with interactions&lt;/h2&gt;

&lt;p&gt;I usually start projects by laying out the interactions. In this case, it’s a spacebar press and when a track gets clicked.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Get all elements with a class of track
var trackList = document.querySelectorAll(&#39;.track&#39;);

// When the spacebar is pressed
document.addEventListener(&#39;keypress&#39;, function(key){
  if( key.keyCode == 32 ){

  }
});

// When .track is clicked
function playPause(){
  trackList[i].addEventListener(&#39;click&#39;, function(e){

  });
}

// Applying the function to all .track elements
for ( i=0; i &amp;lt; trackList.length; i++ ) {
  playPause();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Using track index instead of attributes&lt;/h2&gt;

&lt;p&gt;This Week’s Playlist works by getting the value of the audio attribute on a selected track. Since all tracks are meant to be listed in numerical order, I decided to take this a step forward and get the index (+1) of the selected track.&lt;/p&gt;

&lt;p&gt;We’ll use a function to find the index of the selected song (either the song that is clicked or the song that is playing):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function findIndex(el){
  var i=1;
  while(el.previousSibling){
    el = el.previousSibling;
    if(el.nodeType === 1){
      i++;
    }
  }
  return i;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Adding play and paused classes&lt;/h2&gt;

&lt;p&gt;Next, I added in the appropriate classes based on my base interactions. (Note that we’re still not introducing sound yet.)&lt;/p&gt;

&lt;p&gt;First, we’ll need a function to check for if an element has a class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// A function to check if an element has a class
function hasClass(el, cls) { 
  return el.className &amp;amp;&amp;amp; new RegExp(&#39;(\\s|^)&#39; + cls + &#39;(\\s|$)&#39;).test(el.className);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a spacebar press, I’ll add a class of playing to the first song if nothing has been played yet, and a class of activated to the playlist so that I can style it a bit.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// When the spacebar is pressed
document.addEventListener(&#39;keypress&#39;, function(key){
  if( key.keyCode == 32 ){
    // If no songs have been played yet
    if (document.querySelectorAll(&#39;.playing&#39;).length == 0) {
      index = 0, // Setting the song index
      trackList[index].parentNode.classList.add(&#39;playing&#39;),
      document.querySelectorAll(&#39;.playlist&#39;)[0].classList.add(&#39;activated&#39;);
    } else if ( trackList[index].parentNode.classList[1] == &#39;paused&#39; ) {
    // If a user pressed the spacebar when a song is paused, play the song
      trackList[index].parentNode.classList.remove(&#39;paused&#39;);
    } else {
    // If a user pressed the spacebar when a song is playing, pause the song
      trackList[index].parentNode.classList.add(&#39;paused&#39;);
    }
    key.preventDefault();
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a song click, we&#39;ll add similar classes of activated, playing, and paused:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// When .track is clicked
function playPause(){
  trackList[i].addEventListener(&#39;click&#39;, function(e){
    // Saves li instead of a
    var selected = this.parentNode;
    // Finds index of the selected li
    index = findIndex(selected);

    // If a song is being played for the first time, add a class to .playlist
    if( !hasClass(document.querySelectorAll(&#39;.playlist&#39;)[0], &#39;activated&#39;) ){
      document.querySelectorAll(&#39;.playlist&#39;)[0].classList.add(&#39;activated&#39;);
    }

    // If selected 
    if( hasClass(selected, &#39;playing&#39;) || (document.querySelectorAll(&#39;.playing&#39;).length !== 0)){
      if (!hasClass(selected, &#39;playing&#39;) &amp;amp;&amp;amp; (document.querySelectorAll(&#39;.playing&#39;).length !== 0)) {
        if (selected.parentNode.hasChildNodes()){
          var children = selected.parentNode.childNodes;
          for (var i = 1; i &amp;lt; children.length; i+=2) {
            children[i].classList.remove(&#39;playing&#39;,&#39;paused&#39;);
          }
        };
      }
    } 

      e.preventDefault();

      return song.play(),
      selected.classList.add(&#39;playing&#39;);
      if (!hasClass(selected, &#39;paused&#39;) &amp;amp;&amp;amp; song.currentTime &amp;gt; 0) {
        song.pause(),
        selected.classList.add(&#39;paused&#39;);
      } else {

      }
      !hasClass(selected, &#39;paused&#39;) &amp;amp;&amp;amp; song.currentTime &amp;gt; 0 ? (song.pause(), selected.classList.add(&#39;paused&#39;)) : hasClass(selected, &#39;paused&#39;) &amp;amp;&amp;amp; song.currentTime &amp;gt; 0 &amp;amp;&amp;amp; selected.classList.remove(&#39;paused&#39;); !1;
  });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Adding in extra features&lt;/h2&gt;

&lt;p&gt;One of the big requests that Courtney received was the ability to scrub through a track. I use this a lot on Soundcloud and Rdio to see if the track has enough pull to even consider listening all the way through and eventually put on Next Week’s Playlist.&lt;/p&gt;

&lt;p&gt;To accomplish this, we need to track the position of the mouse click along one axis in the progress bar.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Get click point
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From there, we can calculate the percentage and apply it to the track.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Apply it to current audio
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Criticisms&lt;/h2&gt;

&lt;p&gt;The way I used javascript requires everything in the html to be in its proper order. Using jquery to grab a sibling by element instead of using javascript to grab a sibling by node index is a lot more forgiving.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(this).siblings(&#39;li&#39;).children(&#39;.track&#39;);

// compared to:

this.parentNode.childNodes[0];
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Takeaways&lt;/h2&gt;

&lt;p&gt;While this was an interesting exercise in creating something using pure javascript, it could be done easier using libraries. It also doesn&#39;t take into consideration pulling in tracks from different sources; it&#39;s definitely a first iteration. That being said, we shouldn&#39;t be automatically turning to JQuery for everything, especially when it could be written as simply and load way faster without a library.&lt;/p&gt;
</summary>
      <id>//building-a-music-player.html</id>
      <updated>2015-04-15T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Getting Started</title>
      <link href="//getting-started.html" />
      <summary type="html">&lt;p&gt;About two months ago, I decided to take up running. As with anything I try to master, I gave it a scoff with slight arrogance, exclaiming, “So and so did it and is great at it, so why can’t I?!” In this case, it was my high-school aged cousin, Kevin, who continually wins state-wide cross country races while silently chanting Invictus.&lt;/p&gt;

&lt;p&gt;So as my friends started a wittily named run club (“Two Quads, One Squad”) to train for a half marathon, I decided to join to see how good I could get at this thing. Since I had never been great at athletics growing up, save for a short stint on a soccer team and in a gymnastics league until I broke my arm in fourth grade, I had low expectations. My one goal: just to get out there and see how far I could go.&lt;/p&gt;

&lt;p&gt;And yet, even that proved to be difficult.&lt;/p&gt;

&lt;p&gt;There’s a tipping point, I learned, between when I could force my butt out the door or have my running shoes propped up, lamenting how I’m absolutely terrible at this thing and subscribing to the continual beat down that logically stemmed from the lack of practice and illogically grew from my bruised ego. In the latter, I’d be battling the forces of ‘I can’t’ for the rest of the day. In the former, I’d be liberated to squash great tasks that day.&lt;/p&gt;

&lt;p&gt;Simply put, the longer I thought about going for a run, the more difficult it became and I was less likely to go and do it. (Perhaps why Nike’s famous tagline is so aptly phrased.)&lt;/p&gt;

&lt;h2&gt;“I’m never going to be good anyway.”&lt;/h2&gt;

&lt;p&gt;In college, perfectionist procrastination got me in big trouble when I decided there was no way my concept for cyanotypes was good enough and I failed my alternative photographic processes class. I had one last project to redeem my grade, a photo transfer project, but I also waited too long on that one too. When I arrived at the photo studio, all the supplies had already been used by my classmates and I was left to my own devices. Let me tell you, using gel medium to transfer photos onto canvas does not work and all you’ll end up with is what resembles a child’s attempt at making their own paper from scratch. So after cursing photography (and getting back into making websites a few months later as a creative outlet), I decided that any crappy work I could produce, anything that I at least tried at, was better than delivering nothing.&lt;/p&gt;

&lt;p&gt;Truthfully, I spend a hell of a lot of time thinking about the proper order to do things before getting started—more than I should. I still spend a lot of time researching and sketching before getting into design. It roughly ends up being two-thirds preparation and one-third actual work. That’s not to say preparation isn’t important, but sometimes I use it as a crutch to soak and squeeze the most information out of a project when I should just be starting. You have to recognize the point when to start and force yourself on that path immediately when you know.&lt;/p&gt;

&lt;h2&gt;“You won’t have enough time, just do it tomorrow.”&lt;/h2&gt;

&lt;p&gt;If I end up forcing myself out to go running before I’ve reached the tipping point, the scenario usually goes something like this: &lt;em&gt;oh god—oh god—oh god—I’m going to die—just make it halfway—you’re almost there—oh god—why did I ever decided to do this—I’m going to die—ok just make it home—you’re nearly there—you can see it—oh hey this isn’t too bad—I think I could probably run another mile—good job Klare—that wasn’t too bad—I didn’t die—let’s go again tomorrow—ok that kinda felt good.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The worst part is I know the longer I try to convince myself I won’t have enough time, the less time I’ll actually have and it’ll become a self-fulfilling prophecy of nonsense. This is why identifying the tipping point is crucial, because once I start any project or activity, it becomes easier to complete as I see the end on the horizon.&lt;/p&gt;

&lt;h2&gt;“Everyone will know you’re a beginner and pity you.”&lt;/h2&gt;

&lt;p&gt;Something about starting always terrifies me. It’s like when you go to your first Rocky Horror show and they put a red ‘V’ on your forehead with bright red lipstick. Yeah, that’s what it feels like every time I want to try something new and know I’m going to be terrible at it. Cue falling down and tumbling over myself and calling it progress. I didn’t want to be that person that goes out and buys all the best gear ever and has Photoshop CS Infinity only to use filters and lens flares worse than teenagers on Instagram.&lt;/p&gt;

&lt;p&gt;Yet, when I see a beginner or someone new to the community, all I want to do is encourage their success. This new person chose to explore something I know I love and I actually get giddy knowing she has a chance to experience the same joy I have. It’s the same with people learning frontend development, even if they aren’t as excited about it. I’ll gladly offer my time and support to help them learn because I know one of the best feelings is the aha moment of development when you create something with determination and it actually works. Pity belongs nowhere in those feelings.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Starting is sometimes the hardest part. For me, I’ve learned that knowing my weaknesses and limitations helps to craft tactics to lessen them. Sometimes it means not waiting to let my mind trick myself into thinking I can’t. Sometimes it just requires womaning up and getting things done. However, nothing is more effective than convincing myself that I can finish, whether it’s three miles or launching a website or deciding my dreams are worthy enough to try.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It matters not how strait the gate,&lt;br&gt;
How charge with punishments the scroll, &lt;br&gt;
I am the master of my fate,&lt;br&gt;
I am the captain of my soul.&lt;/em&gt;&lt;br&gt;
— William Ernest Henley&lt;/p&gt;
</summary>
      <id>//getting-started.html</id>
      <updated>2015-02-18T08:57:51-08:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Why I decided to learn how to program – a recollection from my mother</title>
      <link href="//why-i-decided-to-learn-to-program.html" />
      <summary type="html">&lt;p&gt;&lt;i&gt;My mother, Louisa Frank, taught herself how to program in the early ‘80s and has been an inspiration for me also learning how to code. I constantly remind myself that if she could do it, so can I. She’s been a fantastic example of a successful woman in our industry — in both programming AND leadership. I’ve asked her to share some of her experiences throughout her career in technology.&lt;/i&gt;&lt;/p&gt;

&lt;hr&gt;


&lt;p&gt;I stumbled onto computers quite by accident. I needed a job to help pay for college, and the campus newspaper advertised an opening for a typist. This was in the early ‘80s, when typewriters were still common. I had no idea what the job entailed, but I knew how to type, rather slowly.&lt;/p&gt;

&lt;p&gt;I took one typing course, a filler course, in high school. Telling me that typing was a skill that any girl needed to learn, my parents encouraged me to take the course. While it was mostly girls, there were a handful of boys in my class. They signed up for the class so that they could watch the teacher for a whole period. She was young, fresh out of school, and pretty, and she flirted with all the boys in the class and they lapped up her attention.&lt;/p&gt;

&lt;p&gt;“A,S,D,F,L,K,J,H,” she would shout as all the students dutifully pressed the appropriate key, clacking away in unison.&lt;/p&gt;

&lt;p&gt;Later, I used my typing skill to complete my writing assignments for high school and then for college. My electronic typewriter that I’d received for Christmas went with me when I moved into my first dorm, much as a laptop or tablet computer goes with most students today.&lt;/p&gt;

&lt;p&gt;School was expensive, and to help pay the bills, I searched for a part-time job, preferably on campus, so that I could juggle my class time and work time. This was how I spotted the advertisement. My room mate encourage me to go see about it. I fretted that I couldn’t type that quickly and made frequent use of correction tape to fix my mistakes.&lt;/p&gt;

&lt;p&gt;“So what?” she said. “Go and find out about it. Maybe they won’t make you take a typing test. Maybe they don’t care how fast you can type or how accurately. You never know until you ask. That’s how I got my job.”&lt;/p&gt;

&lt;p&gt;She worked in the library, filing returned books. She knew nothing about library science, but had applied, anyway.&lt;/p&gt;

&lt;p&gt;The department advertising the job was located in a little brick house with a wide front porch that I later found out was used as an extra conference room. When I walked in the door, I was surprised to see large, upright boxes on long tables lining the former living room and dining room of the converted residence. In front of each box was a chair, and people sat in those chairs looking intently onto the front of the boxes, or typing on the keyboards resting on the tables. Those “boxes” turned out to be computer terminals, and the people were actually looking at graphical displays on their screens.&lt;/p&gt;

&lt;p&gt;“When can you start? Today?” the man named Keith asked me when I told him I was inquiring about the job. He didn’t ask me how many words a minute I could type, or even want to know if I was any good. He was so desperate for someone to fill the position, anyone willing to do the work was fine with him.&lt;/p&gt;

&lt;p&gt;Keith sat me down at one of the terminals and explained my new position. I would be entering questions into a database. When students wanted to practice taking the C.P.A. exam, they could run a program which would randomly pull these questions from storage and display them on the screen. The student could then input the answer and find out their score when they finished.&lt;/p&gt;

&lt;p&gt;I must have typed thousands of questions into the computer, but the more I typed, the more I became fascinated about the computer, the program the students used to take the practice exam, and the database that held the questions. I asked question after question of Keith.&lt;/p&gt;

&lt;p&gt;“How does the computer know which question to get from the database?”&lt;/p&gt;

&lt;p&gt;“How does the program work?”&lt;/p&gt;

&lt;p&gt;“How does it the computer know to light up one little spot here and not over there?”&lt;/p&gt;

&lt;p&gt;And on and on. I knew almost nothing about computers. I had a calculator that could do math, but that was about it. I didn’t have any courses that required computers and computer science was a brand new major at the university, exclusive and difficult to get into. Those that majored in computer science used the very large Burroughs computer that required punched cards. Or, computer science students sat down at a terminal, a large device that had a keyboard in front and a ream of paper fed into the back, somewhat like an overlarge typewriter on a stand. Commands were entered by the user, onto the keyboard just like a typewriter, and printed on the paper in the back. When a program was compiled, the computer took over and printed the result onto the paper. (I’d used this type of terminal in high school when my physics teacher let me and a few other students play games on it in the lab during our free period.)&lt;/p&gt;

&lt;p&gt;Keith showed me the program behind the practice C.P.A. exam and I was surprised how easy it was to read. I started learning all I could about the programming language and the other applications that ran on this computer. This was not the powerful Burroughs computer that the computer science majors used. This was totally different. It was a CDC computer running what was called PLATO (Programmed Logic for Automated Teaching Operations). Housing several thousand instructional programs and displaying them on graphics terminals worldwide, it used a language called TUTOR, with commands written in English, programs compiled, and displayed on the screen, not punched on a card and fed into the machine.&lt;/p&gt;

&lt;p&gt;I thought it looked easy to write a program, and I was very interested in the how behind the ones I saw running on the screens, so I decided I was going to write my own. I thought up the subject, Architectural Drawing. I was very much into drafting because I was an engineering major. I would try to write an instructional programming that taught simple concepts of drafting. I borrowed a book on TUTOR and I got started all on my own.&lt;/p&gt;

&lt;p&gt;A graphical program, my Architectural Drawing application drew drafting plans on the screen via my programming commands, provided instructions to the user, then displayed a question/answer quiz at the end. It took the student step-by-step through the process of making an accurate draft of a simple building.&lt;/p&gt;

&lt;p&gt;When I was done with my program, and very proud of it, I showed it to by boss, Keith.&lt;/p&gt;

&lt;p&gt;He took one look at it and exclaimed,“You, my dear, are no longer a typist. You are a computer programmer!”&lt;/p&gt;

&lt;p&gt;From that day forward, I stopped typing C.P.A. questions into the computer. I was assigned to create instructional applications, instead. I learned how to use a database to hold my graphics and display them quickly, drawing cartoon characters, accounting graphs, and guidance principles on the screen, in addition to instructions for the user. I loved it! I was hooked.&lt;/p&gt;

&lt;p&gt;I was also very lucky to have Keith for a boss and to have started my programming career on the CDC computer. Keith very much fostered learning and encouraged me. He guided me by making suggestions on what to research and how to fix bugs, for instance. He gave me one-on-one instruction, something I never would have received had I been a student in the Computer Science department. Keith taught me that I could do almost anything I wanted, including computer programming.&lt;/p&gt;

&lt;p&gt;I knew, after that first program, what I wanted to do for a career. I wanted to be a programmer. There was a satisfaction, after a long day sitting in front of a terminal, programming, compiling, and debugging, to see the results of my labor up on the screen. I’m artistic by nature, and programming let my creative side go wild. Writing a program was not only figuring out the commands needed and putting them in the right sequence, it was giving me creative license to develop my application, from start to finish, begin to end (the first and last commands of the program), in the way I saw fit to achieve the desired result on the screen. It was like putting together a puzzle, figuring out which pieces connected to which, finding all the corners and edge pieces and filling in the middle, tossing out one piece in favor of another, until, at the end, the whole puzzle came together to form a perfectly running, bug-free application.&lt;/p&gt;

&lt;p&gt;I’ve seen code that looks like a work of art, in itself, with all the commands lined up just so, and indented likewise. I’ve seen code that looks like a hurricane passed through. Each person has their own signature they depart upon their own code, their own artistic signature, good or bad. Good companies allow their software developers to use their own style, to a point. It helps keep the developer happy, and often gets results much quicker than if they must conform to rigid standards. It also keeps the developer thinking creatively about how to complete that assignment, how to get what the client wants up on the screen in the most efficient, most economical, but most beneficial way, and how to fix production problems quickly and creatively when each minute that ticks by means thousands of dollars lost to the company.&lt;/p&gt;

&lt;p&gt;I went on to write many more programs in my first position at the university, then was hired full time. Once I graduated, I continued to work for this department at the university for a few more years before moving on and up in my career working with software.&lt;/p&gt;

&lt;hr&gt;


&lt;p&gt;&lt;i&gt;Louisa Frank is a retired Senior Vice President of Technology at Bank of America. After starting her career at the University of Delaware Plato Project, she went on to work in several major companies, progressing from software developer to software team leader, software manager, and finally technology executive. A few years ago, she retired early and revisited her programming roots, amongst other things, learning HTML and CSS, programming and maintaining a website for a non-profit firm, Water Is Life Kenya, and maintaining her own website, &lt;a href=&quot;http://thisislafrank.com&quot;&gt;thisislafrank.com&lt;/a&gt;. You can contact her at her website or at &lt;a href=&quot;mailto:thisislafrank@gmail.com&quot;&gt;thisislafrank@gmail.com&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;
</summary>
      <id>//why-i-decided-to-learn-to-program.html</id>
      <updated>2015-01-12T08:57:51-08:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Switching to Vim</title>
      <link href="//switching-to-vim.html" />
      <summary type="html">&lt;p&gt;The first time I started using vim, it was more a necessity than by choice. It was a little bit too late for me to walk to work one morning and still make my morning meeting, so I did what I always did, rode my bike. Not even ten seconds after I had mounted and pushed away from my apartment building, my pedal collided with the oh so lovely marble curbs of dc and I was suddenly flying over my handlebars on one of the busiest streets in the morning. It could’ve been worse. I only ended up with a minor scrape on my leg, but the brunt of my fall had been stopped by my dominant hand. Riding the rest of the way to work that morning, I could barely squeeze the breaks properly and knew I had to lay off it for a few days in order for my hand to have a chance to heal.&lt;/p&gt;

&lt;p&gt;Designing with one hand is a challenge. It’s nearly impossible to do in Photoshop or Sketch, which both require complicated multi-keyed commands to execute even the most basic tasks. Just try drawing a rectangle with one hand on a trackpad. It doesn’t really work. Switching to a mouse didn’t even occur to me. I had been using a trackpad ever since my sophomore year of college when I used to play some pretty intense World of Warcraft on a MacBook Pro.&lt;/p&gt;

&lt;p&gt;I had heard about vim being great for only using keyboard commands, and ditching a trackpad meant one less thing for me to worry about. Everyone who had successfuly switched over to vim praised how much faster it could be. I didn’t have much to lose and at least I knew I could type with one hand, so I decided to try it out.&lt;/p&gt;

&lt;h2&gt;Tips for Switching to Vim&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Don’t expect to be that quick starting out. Hell. I was a lot slower. There’s a ton of commands you need to memorize, just like with any design program, and they’re probably not ones you’re familiar with. &lt;a href=&quot;http://cheetyr.com/vim&quot;&gt;Vim Cheetyr&lt;/a&gt; helps a ton. Just have that open all the time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start with small commands, and when you find yourself doing something a lot slower than in Sublime Text, look up a shortcut. There’s always a shortcut.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn how to set up a .vimrc file. Setting up your preferences (especially syntax highlighting) helps tremendously.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t expect to code the same way as you did in Sublime Text. This isn’t like upgrading a version. Expect that everything is different and, again, always question if you can be doing something quicker.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;Things I’ve learned&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It’s a hell of a lot easier to use vim with one hand than sublime text, sketch, or photoshop.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It takes practice, but eventually it is way faster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Github merge messages seem a hell of a lot less scary. And you know the commands to quit properly instead of panicing and quitting terminal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It helps a lot with focusing on one task, especially since it’s a lot easier to work in one file at a time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It makes you feel like you’re in a secret club that’s visible to everyone but they don’t understand how awesome it is.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;It’s been a few months since I first tried vim out, but overall, I’m enjoying it a lot more. With everything, it takes a bit of practice to learn, but it makes me feel like I’m driving a manual over an automatic; I’m just closer to the code. And, if I ever sprain my hand again, I’ll know I can still get things done.&lt;/p&gt;
</summary>
      <id>//switching-to-vim.html</id>
      <updated>2014-12-23T04:34:51-08:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Designing for Scale</title>
      <link href="//designing-for-scale.html" />
      <summary type="html">&lt;p&gt;This past Saturday, &lt;a href=&quot;http://twitter.com/felskia&quot;&gt;Ali Felski&lt;/a&gt; and I had the pleasure of doing a workshop at the &lt;a href=&quot;http://codeherconference.com/&quot;&gt;Code(Her) Conference&lt;/a&gt;. We went over our process for tackling user experience and user interface design for large web builds and the considerations we take when creating these sites. If you’d like, download our &lt;a href=&quot;/assets/img/blogs/building-for-scale.pdf&quot;&gt;slides&lt;/a&gt; for more information. For more clarification, I thought I’d outline my process for designing interfaces for scale.&lt;/p&gt;

&lt;h2&gt;Why does it matter?&lt;/h2&gt;

&lt;p&gt;We’ve all been on a project that seems to take a life of it’s own and morph into something unrecognizable. Projects like this soon have no clear goals and are like buildings that keep being built on top of buildings. Team members change over time, features may change over time, but design direction should stay solid throughout all this change. Designing for scale is about predicting the future of a site that’ll live on after the team is done initially building and designing.&lt;/p&gt;

&lt;h2&gt;Three goals for designing for scale&lt;/h2&gt;

&lt;h3&gt;1. Flexibility&lt;/h3&gt;

&lt;p&gt;On larger projects, things can change rapidly. Since there are more moving parts, one change from a client could potentially mean a rework of an entire part of the site. Building a website as a system usually prevents headaches associated with these problems.&lt;/p&gt;

&lt;h3&gt;2. Consistency&lt;/h3&gt;

&lt;p&gt;Components that act the same will look similar across all pages so websites stay on brand and don’t confuse users.&lt;/p&gt;

&lt;h3&gt;3. Speed&lt;/h3&gt;

&lt;p&gt;If a new feature is discovered from user testing as being of prime importance and needs to be built right away, styles already exist to do so.&lt;/p&gt;

&lt;h2&gt;Dynamic Content&lt;/h2&gt;

&lt;p&gt;This is a consideration that’s paramount when designing static comps, and one which will most likely arise as a design problem when designing in-browser. In either situation, it’s inevitable that content will be both too short and too long.&lt;/p&gt;

&lt;p&gt;Developers usually compensate for this by either limiting characters on input or cutting off text after a certain number of characters using an elipsis.&lt;/p&gt;

&lt;p&gt;We can do better than that.&lt;/p&gt;

&lt;p&gt;By asking “what if?” while designing, it’s easier to add the correct solutions for little or lots of text.&lt;/p&gt;

&lt;h2&gt;Styleguide-driven design&lt;/h2&gt;

&lt;p&gt;A lot of people talk about developing based off generated styles that keep consistency of visual direction throughout a website, but no one really talks about how a designer starts from functionality and gets to the point of enough designed user interface to have a complete styleguide.&lt;/p&gt;

&lt;p&gt;Clients love to think in terms of pages and deliverables. Developers love reusable components and not pages. Users don’t care beyond the homepage as long as they can accomplish a task. As a designer, I need to find a compromise between presentation and creating a system that’ll grow after I’m finished with it.&lt;/p&gt;

&lt;h3&gt;Process, not tools&lt;/h3&gt;

&lt;p&gt;It doesn’t matter what you use to do the work. There’ll never be a magical tool that’ll do the work for you. Use the tools you’re comfortable in (or not, if you so choose), work best with your team, and help you create the best work possible. What works for me, might not work for you.&lt;/p&gt;

&lt;h3&gt;Taking inventory&lt;/h3&gt;

&lt;p&gt;This could take a while.&lt;/p&gt;

&lt;p&gt;I start by going through every wireframe and listing out all the components by labeling them as a css class. At ISL, we’re using &lt;a href=&quot;http://bem.info/method/&quot;&gt;BEM methodology&lt;/a&gt; for our css structure, so I usually list them this way.&lt;/p&gt;

&lt;p&gt;Additionally, I screenshot all these common elements and throw them into a Sketch file for later. It helps having a visual example for each component in addition to just listing them out.&lt;/p&gt;

&lt;h3&gt;Static approach&lt;/h3&gt;

&lt;p&gt;Typically created using Sketch because of it’s ability to link symbols. This is where that file full of screenshots comes in handy.&lt;/p&gt;

&lt;p&gt;I like to start out designing a few important pages. These pages get shown to the client so we know we’re headed in the right direction. Then the components on these pages are turned into symbols and can be used on other pages. There’s a significant back and forth here where symbols get slightly updated to become more flexible over a greater amount of pages. I also think it helps to continually look at all the pages being designed holistically to make sure everything is headed in the same design direction.&lt;/p&gt;

&lt;p&gt;In the Sketch file, make sure there’s a page with all the symbols that’ll act as the base for the styleguide. Developers will love you forever for making this.&lt;/p&gt;

&lt;p&gt;Not every page will be designed as a static comp. We’re aiming for the pages with the most reused components. Design just enough so it can be translated to code as soon as possible. Type looks different in photoshop, sketch, and illustrator. Elements look different at different browser sizes. There’s no replacement for evaluating a design in it’s intended medium.&lt;/p&gt;

&lt;h3&gt;Inbrowser approach&lt;/h3&gt;

&lt;p&gt;(This is my preferred approach, but if I’m working with designers who don’t know code, it may not be the approach chosen.)&lt;/p&gt;

&lt;p&gt;I start by laying out a base style with color, typography, form inputs, etc. Everything including in this base style is extremely similar to what Brad Frost outlines as atoms in &lt;a href=&quot;http://pattern-lab.info&quot;&gt;Pattern Lab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After this, I can start designing components, every so often switching between pages that share those components to see how well they integrate. You can’t just design all components on their own and expect a great site. Sure, it’ll be flexible, but most likely, the ui will look pieced together. We don’t want that. We’re aiming for great, not passable. During this phase, there will be a lot of back and forth where components influence pages and pages influence components. Focus on the little details and then step back every once and a while to look at the whole thing.&lt;/p&gt;

&lt;p&gt;As components are added and change, they’re linked to a styleguide that also changes. Any designer or developer can pull from that styleguide to keep consistency.&lt;/p&gt;

&lt;h2&gt;Evaluate &amp;amp; Iterate&lt;/h2&gt;

&lt;p&gt;Nothing’s ever 100% right the first go around. Know this and plan for it.&lt;/p&gt;

&lt;p&gt;A large site doesn’t stop when the project ends, it keeps on living and evolving far after all the papers have been signed and the checks delivered.&lt;/p&gt;
</summary>
      <id>//designing-for-scale.html</id>
      <updated>2014-09-15T03:29:21-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>BeardSwipe</title>
      <link href="//beardswipe.html" />
      <summary type="html">&lt;div class=&quot;hero&quot;&gt;
&lt;div class=&quot;embed-container&quot;&gt;&lt;iframe src=&quot;http://player.vimeo.com/video/90373042&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;

&lt;h2&gt;What We Built&lt;/h2&gt;
&lt;p&gt;We put together a full experience, including a social media campaign, website and app design, and a promo video to ensure the prank was fully believable. Users arrived at a striking single-page website (that purposefully mimicked the style of trendy startup websites) to view the full offering of the BeardSwipe app. The site drove users to a marketing video, featuring many of our bearded and not-so-bearded team members. When users clicked the &#39;Download The App&#39; button they were taken to the iStrategyLabs website and informed that they had been pranked.&lt;/p&gt;

&lt;p&gt;One of the most interesting aspects of our team composition was that work was self-assigned. No one team member was told what they should work on or what process to use in approaching their responsibilities. From kickoff to launch, the entire project was created in a sum of two weeks.&lt;/p&gt;

&lt;p&gt;Full website: &lt;a href=&quot;http://beardswipe.me&quot;&gt;Beardswipe.me&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--two-thirds&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image1.jpg&quot; alt=&quot;Web&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--one-third&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image2.jpg&quot; alt=&quot;iOS Design&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;What I Worked on&lt;/h2&gt;
&lt;p&gt;I choose to tackle both design and development of the product website. Knowing that it was to be released as an April Fools joke, I wanted the visual design to mock recent trends while still keeping a streamlined user experience that supported the campaign.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Wireframes&lt;/h3&gt;
&lt;p&gt;Working to get in code as soon as possible, I did a quick mockup of interactions with notes on functionality I needed to tackle straight away in code. I handed these to my copywriter who delved into creating some of the snarky commentary.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image4.jpg&quot; alt=&quot;Wires&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image3.jpg&quot; alt=&quot;Sketches&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image5.jpg&quot; alt=&quot;Sketches&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Art Direction&lt;/h3&gt;

&lt;p&gt;We wanted the website to appeal to what we liked to call the &#39;urban woodsman&#39;, a special breed of bearded man who owned both an axe and a fixed gear bicycle. To reflect this, I chose to use the gold iphone in the designs and pulled out some of that gold to use as accents.&lt;/p&gt;

&lt;p&gt;I also wanted the visual design to be a nod to startup website design trends common around April 2014, as a slight mockery since the product was actually fake. This is why I choose Brandon Grotesque and Helvetica Neue as my base fonts.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image6.jpg&quot; alt=&quot;Web&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/brt.gif&quot; alt=&quot;BRT&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image7.jpg&quot; alt=&quot;Responsive&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/beardswipe/image8.jpg&quot; alt=&quot;Overlapping CSS tricks&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/beardswipe/image9.jpg&quot; alt=&quot;Full comp&quot;&gt;&lt;/p&gt;
</summary>
      <id>//beardswipe.html</id>
      <updated>2014-08-28T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Everything Looks the Same: Convergence of Web Design</title>
      <link href="//everything-looks-the-same.html" />
      <summary type="html">&lt;p&gt;To preface, this was my original proposed topic for &lt;a href=&quot;http://contrarycon.com&quot;&gt;Contrary Con&lt;/a&gt;. If you&#39;ve never prepped for a talk for a conference before, it&#39;s a lot of hard work. Being that it was my first official conference speaking experience, it took most nights (and some mornings) the week of plus extra concepting the week prior. I have a lot more respect now for speakers who can craft engaging and cohesive talks that aren&#39;t focused around their work.&lt;/p&gt;

&lt;p&gt;While I enjoyed speaking on the principles I practice for trying to create quality work and how it transcends one project to affect my future work and the work of my peers, a lot of attendees really wanted to hear about the original topic.&lt;/p&gt;

&lt;p&gt;So here we go.&lt;/p&gt;

&lt;h2&gt;How did we get here?&lt;/h2&gt;

&lt;p&gt;If you were designing two or three years ago, you&#39;ll remember most homepages had four elements. A header, a carousel, a three column section with more content that no one read, and a very large footer with a complete sitemap and contact information.&lt;/p&gt;

&lt;p&gt;In short, something very similar to this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/old-websites.jpg&quot; alt=&quot;2010 era websites&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During that time, most people thought this was the perfect layout. We kept seeing more clients request this and never stray from it. Conveniently, it worked well for clients who always wanted their content &quot;above the fold&quot;. We thought things wouldn&#39;t change too much.&lt;/p&gt;

&lt;p&gt;But things did change.&lt;/p&gt;

&lt;p&gt;Not too long after, responsive design emerged. Some people (including myself) adopted it early on, while others were skeptical for a long while, arguing that separate mobile sites were better. Regardless, responsive design became the norm, and as creators of the web, we adapted to this.&lt;/p&gt;

&lt;p&gt;What we ended up with were longer websites where content could be delivered in more interesting layouts. These layouts were based on strict grid systems that could be easily reconfigured into a single column for small screens.&lt;/p&gt;

&lt;p&gt;They ended up looking a bit like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/new-websites.jpg&quot; alt=&quot;2013 era websites&quot; /&gt;
&lt;cite&gt;&lt;a href=&quot;http://graphicburger.com/one-page-website-wireframes/&quot;&gt;Created with One Page Wireframes&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;But frankly, things still look the same.&lt;/p&gt;

&lt;p&gt;Why is it that today we have more flexibility in delivering content, yet we&#39;re creating websites that look nearly identical to one another?&lt;/p&gt;

&lt;h3&gt;Visual trends as response&lt;/h3&gt;

&lt;p&gt;If you remember (or maybe you&#39;d like to forget), highly texturized, drop shadowed websites were popular at the same time we were creating websites that were only 800 pixels tall. I think a lot of the justification for creating these was based off of our layouts being so rigid. Creating a website with personality was tough when services such as Typekit and Fontdeck were just emerging.&lt;/p&gt;

&lt;p&gt;Additionally, after so many of our websites were just links for a long while, it was nice to be able to include a lot of images that didn&#39;t take forever to load. It was pretty much commonplace to create websites where all the text had a 1px shadow to make it feel inset on the page, echoing actual letter-pressed, real type.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/pendulum-1.jpg&quot; alt=&quot;Pendulum&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In contrast, the minimalistic flat design was a response to this highly texturized trend.  If you remember, responsive design emerged during this time. While we were reluctant to let go of sites that could be designed &#39;pixel perfect&#39;, we realized it was simply easier to create responsive designs for existing websites if they had less decoration and less superfluous content.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/pendulum-2.jpg&quot; alt=&quot;Pendulum&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But it was more than that.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let&#39;s take a look at some of the things that have influenced how we currently design for the web.&lt;/p&gt;

&lt;h3&gt;Responsive Design&lt;/h3&gt;

&lt;p&gt;Things had to change, literally.&lt;/p&gt;

&lt;p&gt;As mentioned before, responsive design was a huge influence on simplifying websites.&lt;/p&gt;

&lt;p&gt;Starting out, designers and developers needed to get familiar with responsive design. To accommodate changing sizes and placement of elements within responsive layouts, websites were mostly distilled down into a collection of large boxes.&lt;/p&gt;

&lt;p&gt;Creating a website became more difficult to complete within the same timeframe. It&#39;s understandable that websites got simpler in response to this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Flexibility has become a more valuable currency than specificity.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Matt Griffin — &lt;a href=&quot;http://alistapart.com/article/client-relationships-and-the-multi-device-web&quot;&gt;Client Relationships and the Multi-Device Web&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Type&lt;/h3&gt;

&lt;p&gt;I like to joke that everything is either set in Proxima Nova or Brandon Grotesque. Or maybe Gotham if the client is really &quot;progressive&quot; (aka, was convinced to pay a lot for a Hoefler &amp;amp; Co typeface).&lt;/p&gt;

&lt;p&gt;It&#39;s mostly true. Take a look at &lt;a href=&quot;http://land-book.com/&quot;&gt;Land Book&lt;/a&gt; and you&#39;ll see the most recent startup homepages featured are set in these typefaces.&lt;/p&gt;

&lt;p&gt;They&#39;re all modern sans-serifs that are easy to read and work with a variety of different logos. In short, very flexible. Yet, overuse dilutes any uniqueness.&lt;/p&gt;

&lt;h3&gt;Bootstrap&lt;/h3&gt;

&lt;p&gt;I get it. It&#39;s easy to use. &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; can be a great tool for quickly creating prototypes. However, when a product gets built using Bootstrap, it can be easy to think the work has been done.&lt;/p&gt;

&lt;p&gt;It works.
It feels like a real product.
It has whitespace.&lt;/p&gt;

&lt;p&gt;However, over time we&#39;ve noticed that websites built with bootstrap still look like bootstrap. Heck, even toolkits based off bootstrap look like bootstrap.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Deciding all the components in a toolkit before starting design is limiting designers to what&#39;s already been done, not what&#39;s possible.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;How similar is too similar?&lt;/h2&gt;

&lt;p&gt;When I came across these two websites in May of 2014, my initial thought was that someone took a hell of a lot of influence from the other. I posted to twitter with a simple reaction of &#39;huh&#39;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BndmDgaCAAAAtZ9.png&quot; alt=&quot;May 2014&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Immediately after, I was reminded that this trend is prevalent in a lot of places. Take for example InVision&#39;s latest redesign, which also uses similar placement of user interface elements and the same font and treatment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Bndn8MKCMAMUz4r.png&quot; alt=&quot;May 2014&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So how similar is too similar? Is this a reflection of trends and influence or designers drawing the same conclusions?&lt;/p&gt;

&lt;h2&gt;What should we do (if anything)?&lt;/h2&gt;

&lt;p&gt;Most people are quick to judge today&#39;s websites, but there are some positives to their similarity.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Users know where to go. Most of the common elements on a page are in similar places and take advantage of users scanning the page in an &#39;F&#39; shaped pattern.&lt;/li&gt;
&lt;li&gt;It&#39;s easy for startups to build first, validate their product and then add on uniqueness.&lt;/li&gt;
&lt;li&gt;The design similarities make websites of today look a hell of a lot better than their predecessors.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;We can do better than that.&lt;/p&gt;

&lt;p&gt;The web community has done a great job recently asking why certain trends exist and whether they add to the sites being created. But we shouldn&#39;t be critical for the sake of being critical.&lt;/p&gt;

&lt;p&gt;As technology changes, our common web design philosophy will also change. It could be a positive response to having more flexibility in the way we create websites, or a negative responsive to using new technology in the same way.&lt;/p&gt;

&lt;p&gt;We&#39;ll see. Change is inevitable.&lt;/p&gt;

&lt;p&gt;Not all of the solutions we&#39;ve used in today&#39;s very minimalist era work for every project. Web designers have already moved away from exceedingly flat design trends (such as long shadows). I predict that we&#39;ll see some bit of texture emerge as the pendulum swings back away from highly minimal.&lt;/p&gt;

&lt;p&gt;I&#39;d challenge all of you creating websites to think about creating something that enhances the work with ever step.&lt;/p&gt;
</summary>
      <id>//everything-looks-the-same.html</id>
      <updated>2014-08-25T03:29:21-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Design Process as Scientific Method</title>
      <link href="//design-process-as-scientific-method.html" />
      <summary type="html">&lt;p&gt;Let&#39;s face it. The last time I thought about the scientific method, it was probably in high school. Back when the chairs for those heavy, black-topped were too tall for your knees to fit underneath and wearing safety googles meant not being able to see through a level of dust and film left on the plastic from years of science classes. I never ended up practicing anything close to science after high school so I don&#39;t have an intimate knowledge of the process, but I&#39;d like to think that there&#39;s something to be garnished from proven methodology.&lt;/p&gt;

&lt;p&gt;Beyond all the awkwardness of teenage misunderstanding, one thing I never got to do in science class was actually use the scientific method as it was intended: as iteration. It builds in an understanding that failure is almost certain and we&#39;re never going to prove our hypothesis correct the first time (unless we&#39;re superhuman or cheating).&lt;/p&gt;

&lt;p&gt;A traditional waterfall approach is much like the scientific method of high school, we go through the motions, but there&#39;s never a chance to go back to change our hypothesis and test again. Once one &#39;deliverable&#39; is signed off on, it&#39;s impossible to go back and change that part of the equation. If we&#39;re lucky, some testing may be done on wireframes or visual design comps, but once that phase is complete, it&#39;s very difficult to change. Waterfall protects teams from ever changing scopes and clients that can&#39;t decide on what they want, sure, but it also holds back teams from creating the best products.&lt;/p&gt;

&lt;p&gt;Yet, agile doesn&#39;t work for every project. So how can we adapt our traditional design process to factor in the near certainty that we will fail, not at everything, at something? I&#39;d like to think that we&#39;re all better designers tomorrow than today, and there have definitely been projects where I could&#39;ve gone back and fixed aspects of a design based on insights learned later on. Perhaps we should be treating both user experience and visual design in a frame much like the scientific method so we can iterate and bring more rigor to a design process.&lt;/p&gt;

&lt;h2&gt;Applying the scientific method to a design phase&lt;/h2&gt;

&lt;p&gt;Let&#39;s take a look at the steps of the scientific method and see how to use them in terms of our own design process.&lt;/p&gt;

&lt;h3&gt;Question&lt;/h3&gt;

&lt;p&gt;These usually end up being more &#39;How&#39; questions than &#39;Why&#39;. Many times, these questions come from our kickoff meetings with our clients. We usually go through a few different exercises to prioritize goals. In one of our recent kickoffs, the top priorities were to increase conversions and simplify/automate specific parts of the cms. Let&#39;s take that one step further by turning them into questions. How can we increase conversions from the homepage to getting a person to sign up for a service? How can we simplify the cms so bulk content can be added and maintained automatically?&lt;/p&gt;

&lt;h3&gt;Hypothesis&lt;/h3&gt;

&lt;p&gt;These are the educated guesses we take when we make design decisions. Only have one button on the homepage will increase clicks to that page. Friendly, family-oriented and candid photography relates with our top personas, making it more likely they&#39;ll explore the website. People want to fill out a contact form more than sending an email to an anonymous address.&lt;/p&gt;

&lt;h3&gt;Testing&lt;/h3&gt;

&lt;p&gt;Design is executed. My preference is to test closest to production format (usually code), but some testing is better than none. Any time I&#39;ve done user testing, it becomes clear really quick if the assumptions I made while designing were correct or ended up confusing users. Asking the questions before designing also makes it easy to test since the questions already exist.&lt;/p&gt;

&lt;h3&gt;Analysis&lt;/h3&gt;

&lt;p&gt;This is where all the testing results are sorted through to identify if our hypotheses were correct or incorrect. New hypotheses, execution and testing may be needed and should be planned for now.&lt;/p&gt;

&lt;h3&gt;Iteration&lt;/h3&gt;

&lt;p&gt;We should assume that some of our hypotheses were wrong and build at least a phase of iteration into our design timeline before showing clients. Why? It makes it easier to defend any design decision to a client because it&#39;s been tested and proven. Instead of doing a shoulder shrug or coming up with some arbitrary design speak bullshit to defend a design, a designer can point to specific tests as reasons for decisions.&lt;/p&gt;

&lt;h2&gt;How is this different than just designing and testing?&lt;/h2&gt;

&lt;p&gt;Well, for starters, testing gets built into the process instead of getting placed at the end of a phase. Instead of designing while these assumptions arise, hypotheses specifically get created to test answer our key questions before starting any design. This helps narrow focus during the design phase down to the main goals identified for any web build. When testing starts, the specific things to test for are already noted through our key questions and hypotheses. Additionally, analysis of tests provides strong documentation and defense for any design decision, both for ux and visual design.&lt;/p&gt;

&lt;p&gt;Adding in this methodology to a timeline may lengthen it, so any team needs to seriously consider where they need to cut the fat. (Personally, I think it exists in visual comp deliverables, but knowing code, I can be very biased.) What it does is strengthen and defend designs, helping them become better by adding in iteration and testing through specific questions and assumptions.&lt;/p&gt;
</summary>
      <id>//design-process-as-scientific-method.html</id>
      <updated>2014-07-14T04:47:21-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Simple Content Audits</title>
      <link href="//content-audits.html" />
      <summary type="html">&lt;p&gt;When starting any redesign of a current website, you need to know the existing content you have to work with. It&#39;s the building blocks of starting a lessons learned about what worked on the current site and what didn&#39;t so you can build a better site moving forward. Complete documentation always helps when you&#39;re not exactly sure what you need moving forward.&lt;/p&gt;

&lt;h2&gt;Grabbing all the content&lt;/h2&gt;

&lt;p&gt;I ran &lt;a href=&quot;http://istrategylabs.com&quot;&gt;iStrategyLabs.com&lt;/a&gt; through the &lt;a href=&quot;http://www.content-insight.com/&quot;&gt;Content Analysis Tool&lt;/a&gt;, which crawls through the site grabbing all the pages and providing data including how many images, media and documents are on a page. This was a lot more thorough than going through the istrategylabs.com site by hand and listing the pages in a spreadsheet.&lt;/p&gt;

&lt;p&gt;After I imported the information from the Content Analysis Tool into a Google spreadsheet, I organized the pages to reflect our existing sitemap. This was just to confirm that the tool worked as I intended and I had all the information necessary to move forward.&lt;/p&gt;

&lt;h2&gt;Gathering Observations&lt;/h2&gt;

&lt;p&gt;Doing an audit on existing pages, images, media and documents is great, but it isn&#39;t enough. After you have all the content, you need to go through and identify the good and not so great parts about your current content. These are the things I looked for after all the pages on the site were listed and organized into a format reflecting our current sitemap.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Duplicate information&lt;/p&gt;

&lt;p&gt; This ones pretty straightforward. We found several instances of pages created for the intention of redirects. Also, several blog posts were created as project recaps when they really should&#39;ve been work case studies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pages that were created as a temporary solution.&lt;/p&gt;

&lt;p&gt; As mentioned above, project recap posts would be created in addition to work pages. Since our work section couldn&#39;t accommodate an explanation of our process, or more than a couple of paragraphs and a dozen images, blog posts were used to supplement. On our new site, we&#39;re planning on doing only case studies for all new work, solving the disconnect between work and blog posts.&lt;/p&gt;

&lt;p&gt; Another outlier was the link to the case study deck underneath work. I flagged that as another place where new pages were being adapted to suit needs instead of the site working for us.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understanding the breadth of existing content&lt;/p&gt;

&lt;p&gt; I had initially thought our site would have a lot of hidden and superfluous pages, but it ended up being straightforward. Our biggest content, not surprisingly, came from blog posts and work, followed by team bios, author pages and categories. Our blog is a HUGE deal. Just imagine if all the teams wrote regularly, and not just strategy &amp;amp; clever girl.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Content in wrong areas&lt;/p&gt;

&lt;p&gt; As mentioned before, our work content also existed on our blog, along with a huge amount of physical experiments that could&#39;ve been more highlighted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Keep/Kill&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; If you removed this section, could the site still exist and make sense?&lt;/p&gt;

&lt;p&gt; We had a lengthy debate in our kickoff meeting on whether we should keep or kill individual team bios. The real question you should be asking when doing a content audit is what value that content is added to a site overall.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;Evaluating the quality of content&lt;/h2&gt;

&lt;p&gt;After the types of content to trim from the site and reorganizing similar content into more sensible areas, you still need to evaluate if the content on the site is any good. Simply having these pages and content on the pages isn&#39;t enough. The content and types of content have to be great enough to keep users on the site and get them interested. Is the about page written in the best way to attract clients and potential hires? Does the work section present information in a way that entices users to keep looking or get in content with us?&lt;/p&gt;

&lt;p&gt;As a designer, one of my primary goals in evaluating content is to help create a design that supports the copy and the audience it was written for. Creating a solid, cohesive experience depends entirely on the content working alongside the targeted design.&lt;/p&gt;

&lt;h2&gt;What next?&lt;/h2&gt;

&lt;p&gt;Now that there&#39;s great base documented, new content can be written to fill gaps and ux design can easily get started with wireframes based on identified content types needed on existing and new pages.&lt;/p&gt;
</summary>
      <id>//content-audits.html</id>
      <updated>2014-07-07T03:29:21-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>EveryoneOn</title>
      <link href="//everyoneon.html" />
      <summary type="html">&lt;div class=&quot;hero&quot;&gt;
    &lt;img src=&quot;/assets/img/everyoneon/hero.jpg&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;

&lt;h2&gt;Project Overview&lt;/h2&gt;

&lt;p&gt;Originally the Connect2Compete program, EveryoneOn came to iStrategyLabs to combine the two brands under one redesigned website. With a focus on information architecture and design, ISL worked with the EveryoneOn team to reorganize content and present it in a simple, digestible, mobile-friendly format.&lt;/p&gt;

&lt;p&gt;The team at iStrategyLabs and I built a complete website that combined two previous websites and brands (Connect2Compete and EveryoneOn). This was especially challenging considering the wide range of audiences (children and families, job-seekers, and seniors). With a focus on information architecture and design, we worked with the EveryoneOn team to reorganize content and present it in a simple, digestible, mobile-friendly format.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;

&lt;h2&gt;Information Architecture&lt;/h2&gt;

&lt;p&gt;As mentioned, we were combining two websites together, which involved a comprehensive look at the content.&lt;/p&gt;

&lt;h3&gt;What we started with&lt;/h3&gt;
&lt;/div&gt;


&lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image1.jpg&quot; alt=&quot;Existing Sitemap&quot;&gt;
    &lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Final sitemap&lt;/h3&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/everyoneon/image2.jpg&quot; alt=&quot;Final Sitemap&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;Wireframes&lt;/h2&gt;

&lt;p&gt;This was my first experience in deliberately choosing to do in-browser wireframes. I wanted the client and our entire team to see how the website might feel with actual content at different screen sizes.&lt;/p&gt;

&lt;p&gt;I also provided an annotated version of the wireframes. This allowed me to tie certain sections directly to our audience and goals.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image3.jpg&quot; alt=&quot;Annotated Wireframes&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image4.jpg&quot; alt=&quot;In-browser Wireframes&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image5.jpg&quot; alt=&quot;In-browser Wireframes&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;Visual Design&lt;/h2&gt;

&lt;h3&gt;Typography&lt;/h3&gt;
&lt;p&gt;I wanted to choose a typefaces that were friendly and approachable to help the website seem more inviting to our wide range of audiences.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/everyoneon/type.jpg&quot; alt=&quot;Type&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;content--post&quot;&gt;
&lt;h4&gt;Adelle&lt;/h4&gt;
&lt;p&gt;Chosen because of it&#39;s personality and flexibility that, when paired with a softer typeface, adds an element of authority. In the context of this website, it was used exclusively for headlines.&lt;/p&gt;

&lt;h4&gt;Proxima Nova Soft&lt;/h4&gt;
&lt;p&gt;A more approachable rounded version of Proxima Nova. I almost always chose to pair this with Adelle to soften the slab serif.&lt;/p&gt;

&lt;h4&gt;Effra&lt;/h4&gt;
&lt;p&gt;A sans-serif known for it&#39;s clean lines and open proportions that create a geometric and modern typeface.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Color&lt;/h3&gt;
&lt;p&gt;EveryoneOn already had a color palette of red and blue. I choose to tweak the colors slightly so that they were less harsh and more youthful while adding a darker blue to balance out whitespace.&lt;/p&gt;
&lt;img src=&quot;/assets/img/everyoneon/color.jpg&quot; alt=&quot;iOS Design&quot;&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/everyoneon/image6.jpg&quot; alt=&quot;Large&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--two-thirds&quot;&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image7.jpg&quot; alt=&quot;Medium&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--one-third&quot;&gt;
        &lt;img src=&quot;/assets/img/everyoneon/image8.jpg&quot; alt=&quot;Small&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/everyoneon/image9.jpg&quot; alt=&quot;Small&quot;&gt;
&lt;br&gt;
&lt;img src=&quot;/assets/img/everyoneon/image10.jpg&quot; alt=&quot;Small&quot;&gt;
&lt;br&gt;
&lt;img src=&quot;/assets/img/everyoneon/image11.jpg&quot; alt=&quot;Small&quot;&gt;&lt;/p&gt;
</summary>
      <id>//everyoneon.html</id>
      <updated>2014-06-15T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Faking Responsive</title>
      <link href="//faking-responsive.html" />
      <summary type="html">&lt;p&gt;Responsive design has been forcing digital agencies for the past few years to rethink their traditional waterfall processes. It&#39;s tough enough trying to nail down a visual design when your client is deliberating over the font size of navigation items, asking questions like: &quot;Why can&#39;t we decrease the size of the carousel to view more items below the fold?&quot;&lt;/p&gt;

&lt;p&gt;Yes. We all still get asked this.&lt;/p&gt;

&lt;p&gt;In an ideal world, all designers would be able to flawlessly code up their designs and browser test them (because we know someone&#39;s bound to be viewing the page in IE). Presenting to clients and iterating through designs based on feedback would be as simple as changing a few backgrounds, images and placements of elements in Photoshop or Illustrator. We can&#39;t all have that. A girl can hope, right?&lt;/p&gt;

&lt;p&gt;Working on a design team with several designers on the same project has taught me to be extremely flexible in the methods we use to create and present work to clients. Some designers know code. Great. Some designers are wizs at Illustrator. Also great. We all have different tools we prefer and work quickly in. I love that some people on my team know more about certain tools and we all still make great designs using different methods.&lt;/p&gt;

&lt;p&gt;But at the end of the day, we&#39;re still presenting a picture of the website we intend to create. Faking responsive with static comps gets us one step closer by allowing the client to view the correct sizing of type, elements and images based on their viewport. But how do we do that?&lt;/p&gt;

&lt;h2&gt;Let&#39;s make a simple page&lt;/h2&gt;

&lt;p&gt;Let&#39;s start off by assuming we&#39;ll still have static comps. Because we&#39;re trying to be really nice to our developers, we&#39;re also creating separate comps for our viewports that are sized appropriately based on width.&lt;/p&gt;

&lt;p&gt;I like to start in Sketch with their &#39;Web Design&#39; template, which gives us four artboards: Desktop HD at 1440 pixels wide, Desktop at 1024 pixels wide, Tablet Portrait at 768 pixels wide, and Mobile Portrait at 320 pixels wide. As a side note, we probably want to make sure we&#39;re saving these both @1x and at @2x in case our client is on a retina device.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/responsive-comps.png&quot; alt=&quot;Example of Sketch document with four different artboards&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we want a simple html page with a css file attached where we list out all of our comp images. We also want to make sure we&#39;re adding a class to each image so we can reference that in css.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
    &amp;lt;img src=&quot;_/img/comp_desktophd.jpg&quot; alt=&quot;&quot; class=&quot;desktophd&quot;&amp;gt;
    &amp;lt;img src=&quot;_/img/comp_desktop.jpg&quot; alt=&quot;&quot; class=&quot;desktop&quot;&amp;gt;
    &amp;lt;img src=&quot;_/img/comp_laptop.jpg&quot; alt=&quot;&quot; class=&quot;laptop&quot;&amp;gt;
    &amp;lt;img src=&quot;_/img/comp_tablet.jpg&quot; alt=&quot;&quot; class=&quot;tablet&quot;&amp;gt;
    &amp;lt;img src=&quot;_/img/comp_mobile.jpg&quot; alt=&quot;&quot; class=&quot;mobile&quot;&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this shows all the images and we only want to show the one that fits the viewport for our user. So in css, we&#39;ll hide all the elements and display only the one that corresponds to our comp width:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@media screen and (min-width: 1024px) {
    .desktophd, .desktop, .laptop, .tablet, .mobile {
        display: none;
    }
    .desktop {
        display: block;
        width: 100%;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since our desktop comp is 1024 pixels wide, we&#39;ll show that when the user&#39;s viewport is at 1024 pixels or higher while hiding everything else.&lt;/p&gt;

&lt;p&gt;Repeat with each comp and we&#39;ll have something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/responsive-comps.gif&quot; alt=&quot;Viewport width adjusting to show different comps at different browser widths&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upload to a server and now we have a url that we can send to our clients. When they open the page, only the image that fits their viewport will show so that we can be sure they&#39;re viewing our designs proportionately.&lt;/p&gt;

&lt;h2&gt;Caveats&lt;/h2&gt;

&lt;p&gt;This doesn&#39;t solve everything. Like the title of this post suggests, we&#39;re only faking responsive. We still have problems like not being able to show interactive elements, transitions, parallax (if you insist on using it), etc. At the end of the client meeting, the comps are still pretty pictures of a website we&#39;ll eventually make.&lt;/p&gt;

&lt;p&gt;You could probably be really fancy with how you serve your images, too. But we&#39;re going for simplicity here, so that&#39;s why I wrote it the way I did.&lt;/p&gt;

&lt;p&gt;This does, however, attempt to solve the issue of the client thinking designs are really really large, or wanting to know how our desktop sized comps will look on their ipad. And sometimes that&#39;s exactly what we need to get signoff on visual designs.&lt;/p&gt;
</summary>
      <id>//faking-responsive.html</id>
      <updated>2014-06-04T02:58:21-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Paying for College</title>
      <link href="//paying-for-college.html" />
      <summary type="html">&lt;div class=&quot;hero&quot;&gt;
&lt;img src=&quot;/assets/img/paying-for-college/image10.jpg&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Student debt can be a confusing arena where it&#39;s often difficult to understand how to compare the financial benefits of getting a college degree. Getting a college degree is often a part of the American dream, but students and parents taking on this debt often fail to realize the debt burden after school.&lt;/p&gt;

&lt;h2&gt;What We Built&lt;/h2&gt;

&lt;p&gt;As a part of the products team at the Consumer Financial Protection Bureau, CFPB, I primarily worked as a visual designer, prototyping my ideas in code and working with other ux designers in sprint cycles to release Paying for College, a set of tools catered towards the education life milestone. &lt;/p&gt;

&lt;p&gt;See and interact with the current tool:&lt;/p&gt;

&lt;a href=&quot;http://www.consumerfinance.gov/paying-for-college/compare-financial-aid-and-college-cost/&quot;&gt;Paying for College Cost Comparision Tool&lt;/a&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image11.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image12.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;What I Worked On&lt;/h2&gt;

&lt;h3&gt;UX&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://brouin.com&quot;&gt;Brittany Mederos&lt;/a&gt; and I collaborated on how to build this tool, whiteboarding out different scenarios that we&#39;d both elaborate on and test. We ran into issues of how users were going to input data (if at all), how we would integrate two-year and four-year programs, and how to easily compare costs of different programs.&lt;/p&gt;
&lt;/div&gt;




&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Interface Design&lt;/h3&gt;

&lt;p&gt;Paying for College was meant to be an extension of the Consumer Financial Protection Bureau brand. It drew inspiration from light usage of color on the rest of the website while focusing primarily on interactions. One of the more interesting parts of the interface was the sticky input header that allowed users to easily switch between schools, and the sticky footer containing important debt information that would attach itself to the bottom of the page once the user reached far enough down the cost table.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--two-thirds&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image8.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--one-third&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image6.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image9.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/paying-for-college/image7.jpg&quot; alt=&quot;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- ![The Interface](/assets/img/cfpb-paying-for-college-tool.png)
 --&gt;



</summary>
      <id>//paying-for-college.html</id>
      <updated>2014-05-26T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Why I Switched to Sketch</title>
      <link href="//why-i-switched-to-sketch.html" />
      <summary type="html">&lt;p&gt;It&#39;s been about two months since I decided to redownload Sketch and see what all the fuss was about. Surprisingly, I ended up liking it. Quite a lot. I&#39;ve switched from grumbling about having to use Photoshop to, now, just mocking up a few components and playing with layouts in Sketch outside of the context of browser constraints or grids already set in sass.&lt;/p&gt;

&lt;p&gt;But first, let me put in context why I even using a program to design at all.&lt;/p&gt;

&lt;p&gt;Being a designer and frontend dev, my ideal workflow is to do everything besides design assets in browser. If I&#39;m working alone, this workflow is excellent for quickly iterating. But, when a project&#39;s team expands from a solo adventure to an expedition (yes, complete with guns, machetes and porters), it&#39;s tough to iterate in code. (Of course, that all changes if I&#39;m designing an app.)&lt;/p&gt;

&lt;p&gt;My creative director and my client aren&#39;t going to understand that I&#39;m trying to carve a Statue of David out of content and code and by iteration 4, it&#39;ll be there. They want to see how it&#39;ll look. In two days. So sometimes you need to make sacrifices in your own ideal process to fit a team balance. That&#39;s where a design app comes in. There&#39;s nothing wrong with using photoshop. Lots of designers use photoshop and produce great work. Some of them code, some of them don&#39;t. We all have different processes that work for each of us.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You do you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Things I enjoy now that I&#39;ve been using sketch exclusively for the past two months:&lt;/p&gt;

&lt;h2&gt;Artboards &amp;amp; Pages&lt;/h2&gt;

&lt;p&gt;Yup. I totally realize that you get this with illustrator. I don&#39;t disagree with you illustrator users! Artboards are awesome! They make iterating ideas quick by just drag-copying entire artboards. I can see what different interaction states look like right next to one another. If I need to create traditional comps because I know another designer may take over the work, it&#39;s easy to store a whole set of pages in one file. The organization is already set up to use and it&#39;s easy to understand.&lt;/p&gt;

&lt;h2&gt;Symbols &amp;amp; Shared Styles&lt;/h2&gt;

&lt;p&gt;Photoshop has this, but, let&#39;s be real, it sucks. Yesterday I imported a fellow designer&#39;s comp from Photoshop to Sketch and create a symbol out of her button style. I ended up not using the button at all in the initial design I created, but when the edits came back from the client, I needed that button and it was easily stored for me to add in a second.&lt;/p&gt;

&lt;h2&gt;Type Rendering&lt;/h2&gt;

&lt;p&gt;I&#39;m not spending 5 million years switching between crisp, strong, mac, mac lcd, etc. Type in Sketch is closely rendered the way it&#39;ll look in modern browsers. I like that. Then I can spend less time wondering why it doesn&#39;t look similar and move on to spending 5 million years adjusting my margins.&lt;/p&gt;

&lt;h2&gt;Exporting&lt;/h2&gt;

&lt;p&gt;I can geek out by exporting all my artboards and pages with &lt;a href=&quot;http://jonohunt.tumblr.com/post/84511158113/alfred-workflow-export-sketch-documents&quot;&gt;one command via Alfred&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Things I&#39;ve noticed need a bit of work:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sketch can get a bit slow if you have a ton of artboards. I&#39;ve gotten around this by moving artboards to pages when I&#39;m mostly done with them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Shared styles also share a color, so if you have type in a font and at one size, but want to change the color to white because it&#39;s on a dark background, you have to unlink the style first.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sometimes resizing icons imported from illustrator can be strange. The inner shape might not resize exactly the right way.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Overall, I&#39;ve been pretty happy with the switch and have only opened Photoshop if another design gets handed to me. I&#39;ve really been loving all the plugins that keep popping up. It seems like the majority of users are really into open source and already are active on github. Sketch has been working great for me. If you&#39;re struggling with one tool, maybe you should give something else a try for a while. If you&#39;re not, then keep on designing! It&#39;s all a means to a polished final product and whatever&#39;s going to help you produce the best work is what you should be using.&lt;/p&gt;
</summary>
      <id>//why-i-switched-to-sketch.html</id>
      <updated>2014-05-15T07:32:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>What DC lacks</title>
      <link href="//what-dc-lacks.html" />
      <summary type="html">&lt;p&gt;I couldn&#39;t really put my finger on it until I left DC. Everyone talks about how transient this city is. I&#39;ve been victim to this common thread, having two of my best friends move to different cities in the past few months. I&#39;m happy for them to start a new adventure and gather new perspectives and experiences they weren&#39;t getting from living in DC. But eventually, most everyone packs up for somewhere new.&lt;/p&gt;

&lt;p&gt;The second thing everyone talks about is the two same question you get asked when you meet someone new. I&#39;ve heard these questions differ from city to city, but it&#39;s become such of a commonality that folks expect it when you first meet.&lt;/p&gt;

&lt;h2&gt;What do you do?&lt;/h2&gt;

&lt;p&gt;I usually tell people I&#39;m a web designer and wait for the confused faces or the polarized comments about my CEO. It&#39;s a fun game when they&#39;re expecting me to ask them same question and I never do.&lt;/p&gt;

&lt;p&gt;People usually say it&#39;s because you get judged immediately on your worth on the career climbing totem pole. I have another theory. On the surface, we&#39;re judged on the things we do, not our character. Bring up any okcupid profile and it&#39;ll list a passion for running, cooking, and traveling. You get points for being more interesting and unexpected in the things you do. Since a job makes up the majority of what a person does from day to do, it gets added to those points. It&#39;s only natural when talking about the things you do to mention (besides sleep) the thing you do the majority of the day: your job.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In France, I&#39;ve heard, it&#39;s rude to ask people what they do.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How much of DC&#39;s culture has permiated down into my core, making it impossible for me to divorce my career from my personality? It&#39;s extremely tough as a designer not to notice things like kerning and typography on everything, but I enjoy making a distinction between my job and my career.&lt;/p&gt;

&lt;h2&gt;Where are you from?&lt;/h2&gt;

&lt;p&gt;This is where I usually wait for the comments on Delaware beaches or something about incorporating in Wilmington. My conversationalist is usually looking for some commonality between the two of us, which may be likely since most everyone in DC is from somewhere else. I&#39;m from the second smallest state and I didn&#39;t live at the beach or in a corporation, so there&#39;s not much to say.&lt;/p&gt;

&lt;p&gt;These questions aren&#39;t bad, but people end up complaining because they&#39;re so surface level. It&#39;s easy to start a conversation with a broad question like the two above, but we get stuck in this surface level slush instead of sinking down into the rabbit hole.&lt;/p&gt;

&lt;p&gt;People who live in DC have a hidden defense mechanism. It&#39;s like they know everyone&#39;s going to leave eventually so making deep connections isn&#39;t that much of a priority. Add big government and being treated like a number to the mix and suddenly a culture of detached professionals permiates through everything.&lt;/p&gt;

&lt;p&gt;I&#39;ve fallen victim to this as well. It&#39;s easy not to get too attached. But it&#39;s also monotonous. The meaty, rich parts of life come from deeper connections between people and the only way to get that is to be more empathetic in our relationships. I&#39;m going to start small and try to keep empathy in the front of my mind. It&#39;s not going to change the city, and I&#39;m not trying to solve all the problems, but it&#39;s a start. Small steps.&lt;/p&gt;
</summary>
      <id>//what-dc-lacks.html</id>
      <updated>2014-04-19T00:00:00-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Ducklings</title>
      <link href="//ducklings.html" />
      <summary type="html">&lt;p&gt;Last night I taught my first class at General Assembly on the basics of HTML. Not only was it the first class of the course, but it was my first class ever. For the better part of three months I&#39;ve been dealing with impostor syndrome because I&#39;m teaching a frontend development course. As a designer. I&#39;d nervously laugh as I told people I&#39;d be sitting on a panel about the &#39;Day in the Life of a Frontend Developer&#39; when that wasn&#39;t my job title at all, and they&#39;d look at me like I was crazy for even thinking I &lt;em&gt;wasn&#39;t&lt;/em&gt; capable of being on that panel.&lt;/p&gt;

&lt;p&gt;When it got time to actually teach, I wasn&#39;t nervous about being discovered as a fraud. They wouldn&#39;t have hired me if they didn&#39;t think I wasn&#39;t capable of teaching the materials. Obviously. Instead, I was more nervous about not remembering everyone&#39;s name and properly communicating the concepts to all my students.&lt;/p&gt;

&lt;p&gt;Learning how to code was mostly a solitary pursuit for me. My parents tried to get my brother to learn how to program on the old Apple 2 Plus that used to sit in our office behind the Compaq loaded up with Windows 95, but I was never encouraged as much to learn. It wasn&#39;t until middle school, when I started surfing the net that I wondered how people made websites and started researching as much as I could.&lt;/p&gt;

&lt;p&gt;Yet, while most developers google and sit in their own little bubbles most of the time, sometimes it&#39;s just easier to ask someone more experiences.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There&#39;s something magical about having the support and structure that comes from a mentor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I never really got javascript until I had a mentor and we built a webapp using knockout.js. It&#39;s funny when you take on something you think you&#39;re not capable of and things just click.&lt;/p&gt;

&lt;p&gt;Now, being on the other side of that relationship, I really hoping that I can inspire my students with that same feeling of awe at building something from scratch and having it come to life. That&#39;s the feeling that lets me know I wouldn&#39;t want to be in any other career.&lt;/p&gt;
</summary>
      <id>//ducklings.html</id>
      <updated>2014-04-09T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>Some Highlights from Grok</title>
      <link href="//some-highlights-from-grok.html" />
      <summary type="html">&lt;p&gt;I was really damn excited going into my double header trip of Barcelona/Greenville. One new place, and one familiar place. Two years ago, I went to Grok for the first time and made some great friends that I&#39;ve kept in touch with on twitter and have run into over those two years at various conferences across the country.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://distilleryimage9.ak.instagram.com/5c5aeff6bb5311e3b33a12e185860505_8.jpg&quot; alt=&quot;Printing my own shirt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What I loved about Grok the first time was still present this year. Amazingly friendly people that you can walk right up to and start talking with and 10/20s where folks who are just starting out and people who are internet famous have equal say. But this year was so much more than that.&lt;/p&gt;

&lt;p&gt;It was great to see Ish Burciaga, Brittany Murray, Matt D. Smith and Jeremiah Adkins again like two years hadn&#39;t gone by. It was also amazing to meet so many new folks, even those in my own city and close by. One of my coworkers even signed up which was nice happenstance.&lt;/p&gt;

&lt;p&gt;When I go to conferences, I like to choose ones that aren&#39;t technical. Why travel all the way to a new city to sit through lectures on things you probably could&#39;ve learned by reading an article? Conferences are about making relationships and getting a new perspective for a little while so that when we get back to our own cities and jobs, we can be inspired to create amazing work and continue the conversations &amp;amp; collaboration. I&#39;m definitely not planning on leaving the relationships I started building at Grok in Greenville.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://distilleryimage0.ak.instagram.com/848591d4bc3911e3b7d60002c99b1c44_8.jpg&quot; alt=&quot;Awesome photobombs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In one of our 10/20s, blogging came up, and I mentioned that I&#39;ve never successfully been able to blog. Following Matt D. Smith&#39;s advice about not spending so much time debating about the design of your site, I&#39;ve designed this website in two days and chose jekyll. Maybe this blogging thing will work. Maybe it won&#39;t. But hopefully someone will get something out of it.&lt;/p&gt;

&lt;p&gt;Out of a few of my 10/20s, there was a word that kept getting mentioned that doesn&#39;t really come up in conversation much in DC. &lt;em&gt;Empathy&lt;/em&gt;. It&#39;s something that I know makes me work better, but it&#39;s so easy to be lazy (especially in DC). Empathizing with a client&#39;s mission instead of just understanding it helps me create better visual designs. Empathizing with my friends and acquaintances helps me deepen relationships.&lt;/p&gt;

&lt;p&gt;I think that&#39;s the thing I was searching for when I left DC bored and ready for adventure. I was bored when I met someone new because they asked the same DC questions: &quot;What do you do&quot; &amp;amp; &quot;Where are you from originally&quot;. But really, I was avoiding empathizing and as a result created barriers between myself and any new connection.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What was lacking wasn&#39;t something I could find by traveling, but something I was missing in myself.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&#39;m going back to DC knowing what I actively have to work on. I haven&#39;t answered all the questions or figured out where exactly I should be or what I should be working on, but I&#39;m a little bit closer. It&#39;s a good feeling.&lt;/p&gt;

&lt;p&gt;Let&#39;s keep those conversations going, Grokers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://distilleryimage10.ak.instagram.com/c64c7854bc7e11e3affe0002c9c90082_8.jpg&quot; alt=&quot;Joseph Abrams and me with cigars&quot; /&gt;&lt;/p&gt;
</summary>
      <id>//some-highlights-from-grok.html</id>
      <updated>2014-04-07T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>CourtPlay</title>
      <link href="//courtplay.html" />
      <summary type="html">&lt;div class=&quot;hero&quot;&gt;
&lt;img src=&quot;/assets/img/courtplay/image1.jpg&quot; alt=&quot;Homepage&quot;&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;
&lt;h2&gt;Project Overview&lt;/h2&gt;

&lt;p&gt;Earning a living as a professional tennis coach can be difficult at times because of the complexities of scheduling between coach, player, and court. &lt;/p&gt;

&lt;p&gt;CourtPlay is an effort to make booking a tennis lesson effortless. A coach can manage their schedule, message players and receive payments via the web app. A player can search for coaches in their area, book lessons directly with them and pay them online.&lt;/p&gt;


&lt;h2&gt;User Experience&lt;/h2&gt;
&lt;p&gt;One of the biggest challenges was creating an interface that was simple enough for both coaches and players. This was especially challenging when we adding calendar bookings and payment of lessons through the dashboard.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/courtplay/image2.jpg&quot; alt=&quot;Userflow&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/courtplay/image3.jpg&quot; alt=&quot;Wireframes&quot;&gt;
        &lt;br&gt;
        &lt;img src=&quot;/assets/img/courtplay/image4.jpg&quot; alt=&quot;Wireframes&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;!-- 
![CourtPlay](/assets/img/courtplay/user-flow.jpg)
 --&gt;


&lt;p&gt; &lt;div class=&quot;content--post&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Interface Design&lt;/h2&gt;


&lt;p&gt;&lt;/div&gt;
&lt;img src=&quot;/assets/img/courtplay/image5.jpg&quot; alt=&quot;Dashboard&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/courtplay/image6.jpg&quot; alt=&quot;Dashboard messages&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;grid__item grid__item--half&quot;&gt;
        &lt;img src=&quot;/assets/img/courtplay/image8.jpg&quot; alt=&quot;Profile&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/courtplay/image7.jpg&quot; alt=&quot;Dashboard&quot;&gt;&lt;/p&gt;

&lt;!-- 
![CourtPlay](/assets/img/courtplay/homepage.jpg)

![CourtPlay](/assets/img/courtplay/dashboard-home.jpg)

![CourtPlay](/assets/img/courtplay/icons.jpg) --&gt;

</summary>
      <id>//courtplay.html</id>
      <updated>2014-03-20T09:57:51-07:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
    <entry>
      <title>CropLife</title>
      <link href="//croplife.html" />
      <summary type="html">&lt;div class=&quot;hero&quot;&gt;
    &lt;img src=&quot;/assets/img/croplife/croplife-vis-home.jpg&quot; alt=&quot;Homepage&quot;&gt;
&lt;/div&gt;


&lt;div class=&quot;content--post&quot;&gt;

&lt;h2&gt;The Problem&lt;/h2&gt;

&lt;p&gt;CropLife came to iStrategyLabs for a complete website redesign. They needed to combine two websites, croplife.org and actionforag.org, together into one site where members of the crop science community at large could search and browse through information related to the industry.&lt;/p&gt;

&lt;h2&gt;What We Built&lt;/h2&gt;

&lt;p&gt;We combined the two websites to create a cohesive repository of information stored in one place. Leveraging angular.js, we were able to quickly load resources, news, and case studies, making browsing through pages and pages of articles instantaneous without requiring page loads or ajax.&lt;/p&gt;

&lt;p&gt;
    &lt;a href=&quot;http://croplife.org&quot;&gt;CropLife.org&lt;/a&gt;
&lt;/p&gt;


&lt;h2&gt;What I Worked On&lt;/h2&gt;

&lt;p&gt;I lead design through the discovery, wireframes and design phases, choosing user experiences that both fit the clients needs and that of their core user base.&lt;/p&gt;

&lt;h3&gt;Sitemap&lt;/h3&gt;
&lt;p&gt;This was a particularly large web build with a lot of different pages, so it was important to identify templates for parent and child pages at the very beginning. A thorough sitemap was also helpful in crafting a content audit of both existing websites.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/croplife/croplife-sitemap.jpg&quot; alt=&quot;Sitemap&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Wireframes&lt;/h3&gt;
&lt;p&gt;I created static wireframes based on the templates identified from the sitemap and content audit, choosing a flexible layout for changing information. A split navigation separates the content between information about the crop science industry at large and information about CropLife as an organization. Limiting the homepage to one large background image carousel helps focus the website to the most relevant and recent news without cluttering the page, and thus, diverting attention from the most important items.&lt;/p&gt;

&lt;p&gt;When creating the wireframes, I kept in mind the modularity for a large scale web build. Focusing on reusable components, I was able to start creating a framework for the whole website, lending to a cohesive experience, rather than a collection of pages.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/croplife/croplife-wireframes.jpg&quot; alt=&quot;Wireframes&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;content--post&quot;&gt;
&lt;h3&gt;Visual Design&lt;/h3&gt;
&lt;p&gt;Starting in Photoshop, I experimented with different visual styles on a few of the main pages, presenting these comps to the client using Invision. Once a visual style was agreed upon, I moved into in-browser design, creating a working prototype of the website that the client could use as an example for key stakeholders. &lt;/p&gt;

&lt;p&gt;CropLife&#39;s existing brand had Gotham in varying weights as their main and secondary font. Since the majority of the website would be informational, with longer articles, I introduced a serif, FF Tisa, for readability and contrast.&lt;/p&gt;
&lt;p&gt;I wanted to keep CropLife&#39;s bright green as the main focus of their brand while introducing other bright pops of color for interactions, when needed. Since CropLife already had a large repo of gorgeous crop photos, I wanted to use these as the main focal point to contrast long swatches of information in the main articles.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/img/croplife/croplife-vis-home2.jpg&quot; alt=&quot;Homepage&quot; /&gt;
&lt;img src=&quot;/assets/img/croplife/croplife-vis-interior.jpg&quot; alt=&quot;Interior&quot; /&gt;
&lt;img src=&quot;/assets/img/croplife/croplife-vis-media.jpg&quot; alt=&quot;Media&quot; /&gt;
&lt;img src=&quot;/assets/img/croplife/croplife-vis-resources.jpg&quot; alt=&quot;Resources&quot; /&gt;&lt;/p&gt;
</summary>
      <id>//croplife.html</id>
      <updated>2014-02-09T08:57:51-08:00</updated>
      <author>
        <name>Klare Frank</name>
      </author>
    </entry>
  
</feed>
